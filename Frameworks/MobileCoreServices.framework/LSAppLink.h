/* Generated by RuntimeBrowser
   Image: /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
 */

@interface LSAppLink : NSObject <NSSecureCoding> {
    NSURL * _URL;
    LSApplicationProxy * _targetApplicationProxy;
}

@property (copy) NSURL *URL;
@property (retain) LSApplicationProxy *targetApplicationProxy;

+ (void)getAppLinkWithURL:(id)arg1 completionHandler:(id /* block */)arg2;
+ (void)openWithURL:(id)arg1 completionHandler:(id /* block */)arg2;
+ (BOOL)supportsSecureCoding;

- (id)URL;
- (void)dealloc;
- (id)debugDescription;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)openWithCompletionHandler:(id /* block */)arg1;
- (void)setTargetApplicationProxy:(id)arg1;
- (void)setURL:(id)arg1;
- (id)targetApplicationProxy;

// LSAppLink (Internal)

+ (id)_appLinkWithURL:(id)arg1 applicationProxy:(id)arg2 error:(id*)arg3;
+ (BOOL)_doesNormalizedURLPath:(id)arg1 matchNormalizedURLPathPattern:(id)arg2;
+ (BOOL)_doesPath:(id)arg1 matchPattern:(id)arg2;
+ (void)_getAppLinkWithURL:(id)arg1 requireEntitlement:(BOOL)arg2 XPCConnection:(id)arg3 completionHandler:(id /* block */)arg4;
+ (id)_haveUserPermissionForBundleIdentifier:(id)arg1;
+ (id)_normalizeURLPath:(id)arg1;
+ (void)_openURL:(id)arg1 withBundleIdentifier:(id)arg2 XPCConnection:(id)arg3 machPort:(unsigned int)arg4 completionHandler:(id /* block */)arg5;

// LSAppLink (Private)

+ (BOOL)URLComponentsAreValidForAppLinks:(id)arg1 error:(id*)arg2;
+ (void)considerPlugInClassAtIndex:(unsigned int)arg1 plugInClasses:(id)arg2 URLComponents:(id)arg3 XPCConnection:(id)arg4 completionHandler:(id /* block */)arg5;
+ (id)dispatchQueue;

// LSAppLink (UserPermissions)

+ (void)clearAllUserPermissions;
+ (void)getAllUserPermissionsWithCompletionHandler:(id /* block */)arg1;
+ (void)setUserPermission:(BOOL)arg1 forApplicationProxy:(id)arg2;

// LSAppLink (UserPermissionsInternal)

+ (void)_clearAllUserPermissionsWithXPCConnection:(id)arg1;
+ (void)_getAllUserPermissionsWithXPCConnection:(id)arg1 completionHandler:(id /* block */)arg2;
+ (void)_setUserPermissions:(BOOL)arg1 forBundleIdentifier:(id)arg2 XPCConnection:(id)arg3;

@end
