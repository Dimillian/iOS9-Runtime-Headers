/* Generated by RuntimeBrowser
   Image: /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

@interface AVPlayerItem : NSObject <NSCopying> {
    AVPlayerItemInternal * _playerItem;
}

@property (nonatomic, retain) <NSObject><NSCopying> *AVKitData;
@property (getter=_isExternalProtectionRequiredForPlayback, setter=_setExternalProtectionRequiredForPlayback:, nonatomic) BOOL _externalProtectionRequiredForPlayback;
@property (getter=_isRental, nonatomic, readonly) BOOL _rental;
@property (nonatomic, readonly) NSDate *_rentalExpirationDate;
@property (nonatomic, readonly) NSDate *_rentalPlaybackExpirationDate;
@property (getter=_isRentalPlaybackStarted, nonatomic, readonly) BOOL _rentalPlaybackStarted;
@property (nonatomic, readonly) NSDate *_rentalPlaybackStartedDate;
@property (nonatomic, readonly) NSDate *_rentalStartDate;
@property (getter=isApplicationAuthorizedForPlayback, nonatomic, readonly) BOOL applicationAuthorizedForPlayback;
@property (getter=isAuthorizationRequiredForPlayback, nonatomic, readonly) BOOL authorizationRequiredForPlayback;
@property (getter=isContentAuthorizedForPlayback, nonatomic, readonly) BOOL contentAuthorizedForPlayback;
@property (nonatomic, readonly) NSError *error;
@property (nonatomic, copy) NSString *mediaKind;
@property (nonatomic, readonly) NSArray *outputs;
@property (nonatomic) unsigned int restrictions;
@property (nonatomic, copy) NSString *serviceIdentifier;
@property (nonatomic, readonly) int status;

+ (struct OpaqueCMTimebase { }*)_copyTimebaseFromFigPlaybackItem:(struct OpaqueFigPlaybackItem { }*)arg1;
+ (BOOL)_forNonStreamingURLsFireKVOForAssetWhenReadyForInspection;
+ (BOOL)_forStreamingItemsVendAssetWithFigPlaybackItem;
+ (BOOL)_hasOverrideForSelector:(SEL)arg1;
+ (BOOL)automaticallyNotifiesObserversOfAllowProgressiveSwitchUp;
+ (BOOL)automaticallyNotifiesObserversOfAsset;
+ (BOOL)automaticallyNotifiesObserversOfHasEnabledAudio;
+ (BOOL)automaticallyNotifiesObserversOfHasEnabledVideo;
+ (BOOL)automaticallyNotifiesObserversOfLoadedTimeRanges;
+ (BOOL)automaticallyNotifiesObserversOfNetworkUsuallyExceedsMaxBitRate;
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferEmpty;
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferFull;
+ (BOOL)automaticallyNotifiesObserversOfPlaybackLikelyToKeepUp;
+ (BOOL)automaticallyNotifiesObserversOfPresentationSize;
+ (BOOL)automaticallyNotifiesObserversOfSavesDownloadedDataToDiskWhenDone;
+ (BOOL)automaticallyNotifiesObserversOfSeekableTimeRanges;
+ (BOOL)automaticallyNotifiesObserversOfStatus;
+ (BOOL)automaticallyNotifiesObserversOfTracks;
+ (BOOL)automaticallyNotifiesObserversOfUsesMinimalLatencyForVideoCompositionRendering;
+ (BOOL)automaticallyNotifiesObserversOfVariantIndex;
+ (void)initialize;
+ (id)playerItemWithAsset:(id)arg1;
+ (id)playerItemWithAsset:(id)arg1 automaticallyLoadedAssetKeys:(id)arg2;
+ (id)playerItemWithURL:(id)arg1;

- (struct CGSize { float x1; float x2; })IFramePrefetchTargetDimensions;
- (unsigned int)RTCReportingFlags;
- (int)_CreateSeekID;
- (id)_URL;
- (void)_addFAListeners;
- (void)_addFPListeners;
- (void)_addSyncLayer:(id)arg1;
- (BOOL)_addToPlayQueueOfFigPlayerOfPlayer:(id)arg1 afterFigPlaybackItemOfItem:(id)arg2;
- (void)_allowSelectMediaOptionsAutomaticallyUsingFigSelectedMediaArrayObtainedFromGroup:(id)arg1;
- (BOOL)_alwaysMonitorsPlayability;
- (void)_applyCurrentAudioMix;
- (void)_applyMediaSelectionOptions;
- (void)_applySeekingWaitsForVideoCompositionRendering;
- (void)_applyTextStyleRules;
- (void)_attachToFigPlayer;
- (void)_attachToPlayer:(id)arg1;
- (id)_audioTimePitchAlgorithm;
- (void)_cacheMediaSelectionOption:(id)arg1 forMediaSelectionGroup:(id)arg2;
- (id)_cachedTracks;
- (BOOL)_canPlayFastForward;
- (BOOL)_canPlayFastReverse;
- (BOOL)_canPlayReverse;
- (BOOL)_canPlaySlowForward;
- (BOOL)_canPlaySlowReverse;
- (BOOL)_canStepBackward;
- (BOOL)_canStepForward;
- (int)_cancelPendingSeekAndRegisterSeekCompletionHandler:(id /* block */)arg1;
- (void)_changeStatusToFailedWithError:(id)arg1;
- (void)_clearCachedMediaSelectionGroup:(id)arg1;
- (void)_configurePlaybackItem;
- (BOOL)_continuesPlayingDuringPrerollForRateChange;
- (BOOL)_continuesPlayingDuringPrerollForSeek;
- (struct OpaqueFigPlaybackItem { }*)_copyFigPlaybackItem;
- (struct OpaqueCMTimebase { }*)_copyProxyTimebase;
- (id)_copyStateDispatchQueue;
- (struct OpaqueCMTimebase { }*)_copyTimebase;
- (void)_didAccessKVOForKey:(id)arg1;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })_duration;
- (id)_ensureAssetWithFigPlaybackItemWithTrackIDs:(id)arg1;
- (struct OpaqueFigCPEProtector { }*)_figCPEProtector;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })_forwardPlaybackEndTime;
- (id)_fpNotificationNames;
- (BOOL)_getCachedNonForcedSubtitleEnabled:(BOOL*)arg1;
- (BOOL)_getCachedPresentationSize:(struct CGSize { float x1; float x2; }*)arg1;
- (BOOL)_hasEnabledAudio;
- (BOOL)_hasEnabledVideo;
- (BOOL)_hasSelectionInCachedMediaSelectionGroup:(id)arg1;
- (void)_informObserversAboutAvailabilityOfDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)_informObserversAboutAvailabilityOfPresentationSize;
- (void)_informObserversAboutAvailabilityOfTracks;
- (void)_insertAfterItem:(id)arg1;
- (void)_invokeReadyForEnqueueingHandlers;
- (BOOL)_isAFileBasedItemThatsReadyToPlay;
- (BOOL)_isNonForcedSubtitleDisplayEnabled;
- (BOOL)_isReadyForBasicInspection;
- (BOOL)_isReadyForInspectionOfPresentationSize;
- (BOOL)_isReadyForInspectionOfTracks;
- (void)_kickAssetObserversIfAppropriate;
- (BOOL)_limitReadAhead;
- (id)_loadedTimeRanges;
- (id)_loadedTimeRangesFromFPPlaybableTimeIntervals:(id)arg1;
- (void)_makeReadyForEnqueueingWithCompletionHandler:(id /* block */)arg1;
- (void)_markAsNeedingNewAssetWithFigPlaybackItem;
- (void)_markAsReadyForBasicInspection;
- (void)_markAsReadyForInspectionOfPresentationSize;
- (void)_markAsReadyForInspectionOfTracks;
- (void)_markAssetWithFigPlaybackItemAsNeedingNewTracks;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })_maximumForwardBufferDuration;
- (id)_nextItem;
- (id)_playbackItemNotificationPayloadToError:(struct __CFDictionary { }*)arg1;
- (int)_playbackLikelyToKeepUpTrigger;
- (id)_playbackProperties;
- (id)_player;
- (void)_playerChangeStatusToFailedWithError:(id)arg1;
- (id)_playerConnection;
- (struct CGSize { float x1; float x2; })_presentationSize;
- (id)_previousItem;
- (id)_propertyListForSelectedMediaOptionUsingFigSelectedMediaArrayObtainedFromGroup:(id)arg1;
- (id)_propertyStorage;
- (void)_quietlySetAggressivelyCachesVideoFrames:(BOOL)arg1;
- (void)_quietlySetAllowsExtendedReadAhead:(BOOL)arg1;
- (void)_quietlySetAlwaysMonitorsPlayability:(BOOL)arg1;
- (void)_quietlySetBlendsVideoFrames:(BOOL)arg1;
- (void)_quietlySetContinuesPlayingDuringPrerollForRateChange:(BOOL)arg1;
- (void)_quietlySetContinuesPlayingDuringPrerollForSeek:(BOOL)arg1;
- (void)_quietlySetFigTimePitchAlgorithm:(struct __CFString { }*)arg1;
- (void)_quietlySetForwardPlaybackEndTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)_quietlySetImageQueueInterpolationCurve:(id)arg1;
- (void)_quietlySetLimitReadAhead:(BOOL)arg1;
- (void)_quietlySetMaximumForwardBufferDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)_quietlySetMaximumTrailingBufferDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)_quietlySetMinimumIntervalForIFrameOnlyPlayback:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)_quietlySetNonForcedSubtitleDisplayEnabled:(BOOL)arg1;
- (void)_quietlySetPlaybackLikelyToKeepUpTrigger:(int)arg1;
- (void)_quietlySetPlaybackProperties:(id)arg1;
- (void)_quietlySetRTCReportingFlags:(unsigned int)arg1;
- (void)_quietlySetReversePlaybackEndTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)_quietlySetReversesMoreVideoFramesInMemory:(BOOL)arg1;
- (void)_quietlySetSoundCheckVolumeNormalization:(float)arg1;
- (void)_quietlySetSpeedThresholdForIFrameOnlyPlayback:(float)arg1;
- (void)_quietlySetUsesIFrameOnlyPlaybackForHighRateScaledEdits:(BOOL)arg1;
- (void)_quietlySetUsesMinimalLatencyForVideoCompositionRendering:(BOOL)arg1;
- (void)_quietlySetVariantIndex:(int)arg1;
- (void)_quietlySetVolumeAdjustment:(float)arg1;
- (void)_quietlySetWillNeverSeekBackwardsHint:(BOOL)arg1;
- (void)_removeFAListeners;
- (void)_removeFPListeners;
- (void)_removeFromItems;
- (void)_removeFromPlayQueueOfFigPlayerOfAttachedPlayer;
- (void)_removeSyncLayer:(id)arg1;
- (void)_renderingSuppressionDidChangeForOutput:(id)arg1;
- (void)_respondToBecomingReadyForBasicInspection;
- (void)_respondToBecomingReadyForBasicInspectionWithDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })_reversePlaybackEndTime;
- (id)_seekableTimeRanges;
- (id)_seekableTimeRangesFromFPSeekableTimeIntervals:(id)arg1;
- (void)_selectMediaOption:(id)arg1 inMediaSelectionGroup:(id)arg2 cacheIfAppropriate:(BOOL)arg3;
- (void)_selectMediaOption:(id)arg1 inNonStreamingGroup:(id)arg2 cacheIfAppropriate:(BOOL)arg3;
- (void)_selectMediaOption:(id)arg1 inStreamingGroup:(id)arg2 cacheIfAppropriate:(BOOL)arg3;
- (void)_selectMediaOption:(id)arg1 usingFigSelectedMediaArrayObtainedFromGroup:(id)arg2;
- (void)_setAsset:(id)arg1;
- (void)_setAssetToAssetWithFigPlaybackItemIfAppropriate;
- (void)_setAudioCurvesAccordingToInputParameters:(id)arg1 forTrackID:(int)arg2;
- (void)_setAudioEffectParameters:(id)arg1 forTrackID:(int)arg2;
- (void)_setAudioTapProcessor:(struct opaqueMTAudioProcessingTap { }*)arg1 forTrackID:(int)arg2;
- (void)_setAudioTimePitchAlgorithm:(id)arg1 forTrackID:(int)arg2;
- (void)_setSuppressesVideoLayers:(BOOL)arg1;
- (void)_setSyncLayersOnFigPlaybackItem:(id)arg1;
- (void)_setTimedMetadata:(id)arg1;
- (void)_setURL:(id)arg1;
- (void)_setVideoCompositionFrameDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)_setVideoCompositionInstructions:(id)arg1;
- (void)_setVideoCompositionRenderScale:(float)arg1;
- (void)_setVideoCompositionRenderSize:(struct CGSize { float x1; float x2; })arg1;
- (void)_setVideoCompositor:(void*)arg1;
- (BOOL)_suppressesVideoLayers;
- (BOOL)_suppressionForOutputs:(id)arg1;
- (id)_trackWithTrackID:(int)arg1;
- (id)_tracks;
- (id)_tracksFromAssetTrackIDs;
- (id)_tracksWithFPTrackIDArray:(id)arg1 fromFigPlaybackItem:(struct OpaqueFigPlaybackItem { }*)arg2;
- (void)_unregisterInvokeAndReleasePendingSeekCompletionHandlerForSeekID:(int)arg1 finished:(BOOL)arg2;
- (void)_updateLegibleSuppressionOnFigPlaybackItem:(struct OpaqueFigPlaybackItem { }*)arg1 basedOnOutputs:(id)arg2;
- (void)_updateTimebase;
- (void)_updateVideoSuppressionOnFigPlaybackItem:(struct OpaqueFigPlaybackItem { }*)arg1 basedOnOutputs:(id)arg2;
- (BOOL)_usesMinimalLatencyForVideoCompositionRendering;
- (id)_weakReference;
- (void)_willAccessKVOForKey:(id)arg1;
- (BOOL)_willNeverSeekBackwardsHint;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned int)arg3 context:(void*)arg4;
- (BOOL)aggressivelyCachesVideoFrames;
- (BOOL)allowProgressiveSwitchUp;
- (BOOL)allowsExtendedReadAhead;
- (BOOL)alwaysMonitorsPlayability;
- (id)asset;
- (id)audioMix;
- (id)audioTimePitchAlgorithm;
- (id)automaticallyLoadedAssetKeys;
- (BOOL)blendsVideoFrames;
- (BOOL)canPlayFastForward;
- (BOOL)canPlayFastReverse;
- (BOOL)canPlayReverse;
- (BOOL)canPlaySlowForward;
- (BOOL)canPlaySlowReverse;
- (BOOL)canStepBackward;
- (BOOL)canStepForward;
- (void)cancelPendingSeeks;
- (BOOL)continuesPlayingDuringPrerollForRateChange;
- (BOOL)continuesPlayingDuringPrerollForSeek;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)currentDate;
- (id)currentEstimatedDate;
- (id)currentMediaSelection;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })currentTime;
- (id)customVideoCompositor;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (void)didChangeValueForKey:(id)arg1;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })duration;
- (id)error;
- (void)finalize;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })forwardPlaybackEndTime;
- (id)gaplessInfo;
- (BOOL)hasEnabledAudio;
- (BOOL)hasEnabledVideo;
- (id)imageQueueInterpolationCurve;
- (id)init;
- (id)initWithAsset:(id)arg1;
- (id)initWithAsset:(id)arg1 automaticallyLoadedAssetKeys:(id)arg2;
- (id)initWithURL:(id)arg1;
- (id)initialDate;
- (id)initialEstimatedDate;
- (BOOL)isNonForcedSubtitleDisplayEnabled;
- (BOOL)isPlaybackBufferEmpty;
- (BOOL)isPlaybackBufferFull;
- (BOOL)isPlaybackLikelyToKeepUp;
- (BOOL)limitReadAhead;
- (id)loadedTimeRanges;
- (float)maximumBitRate;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })maximumForwardBufferDuration;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })maximumTrailingBufferDuration;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })minimumIntervalForIFrameOnlyPlayback;
- (BOOL)networkUsuallyExceedsMaxBitRate;
- (id)playabilityMetrics;
- (int)playbackLikelyToKeepUpTrigger;
- (BOOL)playerAppliesAutomaticMediaSelectionToGroup:(id)arg1;
- (double)preferredPeakBitRate;
- (struct CGSize { float x1; float x2; })presentationSize;
- (float)progressTowardsPlaybackLikelyToKeepUp;
- (BOOL)requiresAccessLog;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })reversePlaybackEndTime;
- (BOOL)reversesMoreVideoFramesInMemory;
- (BOOL)savesDownloadedDataToDiskWhenDone;
- (BOOL)seekToDate:(id)arg1;
- (BOOL)seekToDate:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)seekToTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)seekToTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 completionHandler:(id /* block */)arg2;
- (void)seekToTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 toleranceBefore:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 toleranceAfter:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3;
- (void)seekToTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 toleranceBefore:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 toleranceAfter:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 completionHandler:(id /* block */)arg4;
- (id)seekableTimeRanges;
- (BOOL)seekingWaitsForVideoCompositionRendering;
- (void)selectMediaOption:(id)arg1 inMediaSelectionGroup:(id)arg2;
- (void)selectMediaOptionAutomaticallyInMediaSelectionGroup:(id)arg1;
- (id)selectedMediaOptionInMediaSelectionGroup:(id)arg1;
- (void)setAggressivelyCachesVideoFrames:(BOOL)arg1;
- (void)setAllowProgressiveSwitchUp:(BOOL)arg1;
- (void)setAllowsExtendedReadAhead:(BOOL)arg1;
- (void)setAlwaysMonitorsPlayability:(BOOL)arg1;
- (void)setAudioMix:(id)arg1;
- (void)setAudioTimePitchAlgorithm:(id)arg1;
- (void)setBlendsVideoFrames:(BOOL)arg1;
- (void)setContinuesPlayingDuringPrerollForRateChange:(BOOL)arg1;
- (void)setContinuesPlayingDuringPrerollForSeek:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (void)setForwardPlaybackEndTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setGaplessInfo:(id)arg1;
- (void)setIFramePrefetchTargetDimensions:(struct CGSize { float x1; float x2; })arg1;
- (void)setImageQueueInterpolationCurve:(id)arg1;
- (void)setInitialDate:(id)arg1;
- (void)setInitialEstimatedDate:(id)arg1;
- (void)setLimitReadAhead:(BOOL)arg1;
- (void)setMaximumBitRate:(float)arg1;
- (void)setMaximumForwardBufferDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setMaximumTrailingBufferDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setMinimumIntervalForIFrameOnlyPlayback:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setNetworkUsuallyExceedsMaxBitRate:(BOOL)arg1;
- (void)setNonForcedSubtitleDisplayEnabled:(BOOL)arg1;
- (void)setPlaybackLikelyToKeepUpTrigger:(int)arg1;
- (void)setPreferredPeakBitRate:(double)arg1;
- (void)setRTCReportingFlags:(unsigned int)arg1;
- (void)setRequiresAccessLog:(BOOL)arg1;
- (void)setReversePlaybackEndTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setReversesMoreVideoFramesInMemory:(BOOL)arg1;
- (void)setSavesDownloadedDataToDiskWhenDone:(BOOL)arg1;
- (void)setSeekingWaitsForVideoCompositionRendering:(BOOL)arg1;
- (void)setSoundCheckVolumeNormalization:(float)arg1;
- (void)setSpeedThresholdForIFrameOnlyPlayback:(float)arg1;
- (void)setTextStyleRules:(id)arg1;
- (void)setUsesIFrameOnlyPlaybackForHighRateScaledEdits:(BOOL)arg1;
- (void)setUsesMinimalLatencyForVideoCompositionRendering:(BOOL)arg1;
- (void)setVariantIndex:(int)arg1;
- (void)setVideoComposition:(id)arg1;
- (void)setVolumeAdjustment:(float)arg1;
- (void)setWillNeverSeekBackwardsHint:(BOOL)arg1;
- (float)soundCheckVolumeNormalization;
- (float)speedThresholdForIFrameOnlyPlayback;
- (int)status;
- (void)stepByCount:(int)arg1;
- (id)textStyleRules;
- (struct OpaqueCMTimebase { }*)timebase;
- (id)timedMetadata;
- (id)tracks;
- (BOOL)usesIFrameOnlyPlaybackForHighRateScaledEdits;
- (BOOL)usesMinimalLatencyForVideoCompositionRendering;
- (id)valueForUndefinedKey:(id)arg1;
- (int)variantIndex;
- (id)videoComposition;
- (float)volumeAdjustment;
- (void)willChangeValueForKey:(id)arg1;
- (BOOL)willNeverSeekBackwardsHint;

// AVPlayerItem (AVPlayerItemAVKit)

- (id)AVKitData;
- (void)setAVKitData:(id)arg1;

// AVPlayerItem (AVPlayerItemDataYouTubeID_Private)

- (id)dataYouTubeID;
- (void)setDataYouTubeID:(id)arg1;

// AVPlayerItem (AVPlayerItemLogging)

- (id)accessLog;
- (id)errorLog;

// AVPlayerItem (AVPlayerItemMediaKind_Private)

- (id)_mediaKind;
- (void)_quietlySetMediaKind:(id)arg1;
- (id)mediaKind;
- (void)setMediaKind:(id)arg1;

// AVPlayerItem (AVPlayerItemOutputs)

- (void)_addLegibleOutput:(id)arg1;
- (void)_addMetadataOutput:(id)arg1;
- (void)_addVideoOutput:(id)arg1;
- (void)_evaluateLegibleOutputs;
- (void)_evaluateMetadataOutputs;
- (void)_evaluateVideoOutputs;
- (id)_legibleOutputsForKeys;
- (id)_metadataOutputsForKeys;
- (id)_preferredPixelBufferAttributes;
- (void)_removeLegibleOutput:(id)arg1;
- (void)_removeMetadataOutput:(id)arg1;
- (void)_removeVideoOutput:(id)arg1;
- (id)_videoOutputs;
- (void)addOutput:(id)arg1;
- (id)outputs;
- (void)removeOutput:(id)arg1;

// AVPlayerItem (AVPlayerItemProtectedContent)

- (BOOL)isApplicationAuthorizedForPlayback;
- (BOOL)isAuthorizationRequiredForPlayback;
- (BOOL)isContentAuthorizedForPlayback;

// AVPlayerItem (AVPlayerItemProtectedContentPrivate)

+ (id)_initializeProtectedContentPlaybackSupportSessionAsynchronouslyForProvider:(id)arg1 withOptions:(id)arg2;
+ (void)_uninitializeProtectedContentPlaybackSupportSession:(id)arg1;

- (BOOL)_isExternalProtectionRequiredForPlayback;
- (id)_isExternalProtectionRequiredForPlaybackInternal;
- (BOOL)_isRental;
- (BOOL)_isRentalPlaybackStarted;
- (id)_rentalExpirationDate;
- (id)_rentalPlaybackExpirationDate;
- (id)_rentalPlaybackStartedDate;
- (id)_rentalStartDate;
- (void)_setExternalProtectionRequiredForPlayback:(BOOL)arg1;

// AVPlayerItem (AVPlayerItemRestrictions_Private)

- (void)_quietlySetRestrictions:(unsigned int)arg1;
- (unsigned int)restrictions;
- (void)setRestrictions:(unsigned int)arg1;

// AVPlayerItem (AVPlayerItemServiceIdentifier_Private)

- (void)_quietlySetServiceIdentifier:(id)arg1;
- (id)serviceIdentifier;
- (void)setServiceIdentifier:(id)arg1;

// AVPlayerItem (AVPlayerItemSupportForMediaPlayer)

- (long long)_availableFileSize;
- (long long)_fileSize;
- (void)_quietlySetEQPreset:(int)arg1;
- (void)_setAudibleDRMInfo:(id)arg1;
- (void)_setEQPreset:(int)arg1;
- (void)_setRampInOutInfo:(id)arg1;

// AVPlayerItem (LegibleOutputSupport)

- (void)_figPlaybackItem:(struct OpaqueFigPlaybackItem { }*)arg1 didFlushLegibleOutputWithDictionaryKey:(id)arg2;
- (void)_figPlaybackItem:(struct OpaqueFigPlaybackItem { }*)arg1 didOutputAttributedStrings:(id)arg2 nativeSampleBuffers:(id)arg3 atItemTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg4 withLegibleOutputsDictionaryKey:(id)arg5;
- (id)_legibleOutputForKey:(id)arg1;

// AVPlayerItem (MetadataOutputSupport)

- (void)_figPlaybackItem:(struct OpaqueFigPlaybackItem { }*)arg1 didFlushMetadataOutputWithDictionaryKey:(id)arg2;
- (void)_figPlaybackItem:(struct OpaqueFigPlaybackItem { }*)arg1 didOutputSampleBuffers:(id)arg2 fromTrackWithID:(int)arg3 forMetadataOutputWithDictionaryKey:(id)arg4;
- (id)_metadataOutputForKey:(id)arg1;

@end
