/* Generated by RuntimeBrowser
   Image: /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 */

@interface AUExtensionInstanceProxy : NSObject {
    struct AUv3InstanceBase { int (**x1)(); int (*x2)(); int (*x3)(); int (*x4)(); void *x5; struct OpaqueAudioComponentInstance {} *x6; struct AudioComponentDescription { unsigned int x_7_1_1; unsigned int x_7_1_2; unsigned int x_7_1_3; unsigned int x_7_1_4; unsigned int x_7_1_5; } x7; id x8; struct vector<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> >, std::__1::allocator<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > > > { struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_9_1_1; struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_9_1_2; struct __compressed_pair<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > *, std::__1::allocator<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > > > { struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_3_2_1; } x_9_1_3; } x9; struct unique_ptr<AUv3InstanceBase::AllParameterListener, std::__1::default_delete<AUv3InstanceBase::AllParameterListener> > { struct __compressed_pair<AUv3InstanceBase::AllParameterListener *, std::__1::default_delete<AUv3InstanceBase::AllParameterListener> > { struct AllParameterListener {} *x_1_2_1; } x_10_1_1; } x10; struct AUv3RenderAdapter { struct CAMutex { int (**x_1_2_1)(); char *x_1_2_2; struct _opaque_pthread_t {} *x_1_2_3; struct _opaque_pthread_mutex_t { long x_4_3_1; BOOL x_4_3_2[40]; } x_1_2_4; } x_11_1_1; struct vector<AUv3RenderAdapter::AUInputElement, std::__1::allocator<AUv3RenderAdapter::AUInputElement> > { struct AUInputElement {} *x_2_2_1; struct AUInputElement {} *x_2_2_2; struct __compressed_pair<AUv3RenderAdapter::AUInputElement *, std::__1::allocator<AUv3RenderAdapter::AUInputElement> > { struct AUInputElement {} *x_3_3_1; } x_2_2_3; } x_11_1_2; id /* block */ x_11_1_3; } x11; id /* block */ x12; id /* block */ x13; struct ParameterMap { id x_14_1_1; struct vector<AUv3InstanceBase::ScopeElementIDObj, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_2_2_1; struct ScopeElementIDObj {} *x_2_2_2; struct __compressed_pair<AUv3InstanceBase::ScopeElementIDObj *, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_3_1; } x_2_2_3; } x_14_1_2; struct vector<AUv3InstanceBase::ScopeElementIDObj, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_2_1; struct ScopeElementIDObj {} *x_3_2_2; struct __compressed_pair<AUv3InstanceBase::ScopeElementIDObj *, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_3_1; } x_3_2_3; } x_14_1_3; } x14; struct HostCallbackInfo { void *x_15_1_1; int (*x_15_1_2)(); int (*x_15_1_3)(); int (*x_15_1_4)(); int (*x_15_1_5)(); } x15; } * _auInstance;
}

@property (nonatomic) struct AUv3InstanceBase { int (**x1)(); int (*x2)(); int (*x3)(); int (*x4)(); void *x5; struct OpaqueAudioComponentInstance {} *x6; struct AudioComponentDescription { unsigned int x_7_1_1; unsigned int x_7_1_2; unsigned int x_7_1_3; unsigned int x_7_1_4; unsigned int x_7_1_5; } x7; id x8; /* Warning: unhandled struct encoding: '{vector<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener' */ struct x9; void*x10; void*x11; void*x12; void*x13; out void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; out void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; long x54; int x55; BOOL x56; void*x57; void*x58; int x59; out in short x60; void*x61; void*x62; BOOL x63; out double x64; void*x65; void*x66; unsigned int x67/* : ? */; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; unsigned char x76; out in void*x77; void*x78; in void*x79; short x80; void*x81; long doublex82; void*x83; void x84; void*x85; long x86; out void*x87; void*x88; const void*x89; void*x90; long x91; void*x92; void*x93; float x94; out const void*x95; short x96; void*x97; int x98; void*x99; void*x100; out in void*x101; unsigned short x102; int x103; void*x104; void*x105; long x106; void*x107; void*x108; out const void*x109; void*x110; long x111; void*x112; void*x113; float x114; out const void*x115; void*x116; long doublex117; void*x118; void x119; void*x120; long x121; out void*x122; void*x123; const void*x124; unsigned short x125; long doublex126; void*x127; short x128; void*x129; int x130; void*x131; void*x132; out in void*x133; unsigned short x134; int x135; void*x136; void*x137; long x138; void*x139; void*x140; out const void*x141; short x142; double x143; void*x144; void*x145; unsigned short x146; void*x147; short x148; void*x149; void*x150; void*x151; void*x152; unsigned long x153; int x154; unsigned int x155/* : ? */; const void*x156; const void*x157; void*x158; void*x159; const void*x160; void*x161; void*x162; void*x163; out const void*x164; short x165; void*x166; void*x167; out void*x168; in double x169; void*x170; void*x171; int x172; out in void*x173; float x174; const void*x175; void*x176; void*x177; void*x178; out const void*x179; void*x180; void*x181; out void*x182; in double x183; void*x184; void*x185; int x186; out in void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; out void*x197; void*x198; void*x199; void*x200; void*x201; inout unsigned short x202; void*x203; void*x204; void*x205; oneway void*x206; long x207; void*x208; void*x209; inout out in void*x210; void*x211; void*x212; void*x213; void*x214; int x215; in void*x216; unsigned short x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; out double x224; unsigned short x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; unsigned int x243; void*x244; struct x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; out void*x260; void*x261; void*x262; void*x263; void*x264; inout unsigned short x265; void*x266; void*x267; void*x268; oneway void*x269; long x270; void*x271; void*x272; inout out in void*x273; void*x274; void*x275; void*x276; void*x277; int x278; in void*x279; unsigned short x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; out double x287; unsigned short x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; short x297; void*x298; void*x299; void*x300; const void*x301; void*x302; void*x303; BOOL x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; double x313; void*x314; int x315; void*x316; out void*x317; unsigned char x318; void*x319; out void*x320; void*x321; void*x322; void*x323; void*x324; out void*x325; in void*x326; void*x327; void*x328; in void*x329; void*x330; void*x331; long doublex332; void*x333; void*x334; void*x335; short x336; void*x337; BOOL x338; void*x339; const void*x340; int x341; void*x342; void*x343; void*x344; void*x345; void*x346; int x347; void*x348; out void*x349; in void*x350; void*x351; void*x352; struct x353; void*x354; void*x355; void*x356; void*x357; void*x358; in void*x359; short x360; void*x361; int x362; void*x363; void*x364; void*x365; in void*x366; void*x367; void*x368; double x369; void*x370; void*x371; void*x372; int x373; void*x374; in void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; in void*x400; short x401; void*x402; int x403; void*x404; void*x405; void*x406; in void*x407; void*x408; void*x409; double x410; void*x411; void*x412; void*x413; int x414; void*x415; in void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; in void*x441; short x442; void*x443; int x444; void*x445; void*x446; void*x447; in void*x448; void*x449; void*x450; double x451; void*x452; void*x453; void*x454; int x455; void*x456; in void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; in void*x482; short x483; void*x484; int x485; void*x486; void*x487; void*x488; in void*x489; void*x490; void*x491; double x492; void*x493; void*x494; void*x495; int x496; void*x497; in void*x498; void*x499; void*x500; void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; void*x519; void*x520; void*x521; void*x522; in void*x523; short x524; void*x525; int x526; void*x527; void*x528; void*x529; in void*x530; void*x531; void*x532; double x533; void*x534; void*x535; void*x536; int x537; void*x538; in void*x539; void*x540; void*x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; }*auInstance; /* unknown property attribute:  std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> >=^{ScopeElementIDObj}}}}{HostCallbackInfo=^v^?^?^?^?}} */

- (struct AUv3InstanceBase { int (**x1)(); int (*x2)(); int (*x3)(); int (*x4)(); void *x5; struct OpaqueAudioComponentInstance {} *x6; struct AudioComponentDescription { unsigned int x_7_1_1; unsigned int x_7_1_2; unsigned int x_7_1_3; unsigned int x_7_1_4; unsigned int x_7_1_5; } x7; id x8; struct vector<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> >, std::__1::allocator<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > > > { struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_9_1_1; struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_9_1_2; struct __compressed_pair<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > *, std::__1::allocator<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > > > { struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_3_2_1; } x_9_1_3; } x9; struct unique_ptr<AUv3InstanceBase::AllParameterListener, std::__1::default_delete<AUv3InstanceBase::AllParameterListener> > { struct __compressed_pair<AUv3InstanceBase::AllParameterListener *, std::__1::default_delete<AUv3InstanceBase::AllParameterListener> > { struct AllParameterListener {} *x_1_2_1; } x_10_1_1; } x10; struct AUv3RenderAdapter { struct CAMutex { int (**x_1_2_1)(); char *x_1_2_2; struct _opaque_pthread_t {} *x_1_2_3; struct _opaque_pthread_mutex_t { long x_4_3_1; BOOL x_4_3_2[40]; } x_1_2_4; } x_11_1_1; struct vector<AUv3RenderAdapter::AUInputElement, std::__1::allocator<AUv3RenderAdapter::AUInputElement> > { struct AUInputElement {} *x_2_2_1; struct AUInputElement {} *x_2_2_2; struct __compressed_pair<AUv3RenderAdapter::AUInputElement *, std::__1::allocator<AUv3RenderAdapter::AUInputElement> > { struct AUInputElement {} *x_3_3_1; } x_2_2_3; } x_11_1_2; id /* block */ x_11_1_3; } x11; id /* block */ x12; id /* block */ x13; struct ParameterMap { id x_14_1_1; struct vector<AUv3InstanceBase::ScopeElementIDObj, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_2_2_1; struct ScopeElementIDObj {} *x_2_2_2; struct __compressed_pair<AUv3InstanceBase::ScopeElementIDObj *, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_3_1; } x_2_2_3; } x_14_1_2; struct vector<AUv3InstanceBase::ScopeElementIDObj, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_2_1; struct ScopeElementIDObj {} *x_3_2_2; struct __compressed_pair<AUv3InstanceBase::ScopeElementIDObj *, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_3_1; } x_3_2_3; } x_14_1_3; } x14; struct HostCallbackInfo { void *x_15_1_1; int (*x_15_1_2)(); int (*x_15_1_3)(); int (*x_15_1_4)(); int (*x_15_1_5)(); } x15; }*)auInstance;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)setAuInstance:(struct AUv3InstanceBase { int (**x1)(); int (*x2)(); int (*x3)(); int (*x4)(); void *x5; struct OpaqueAudioComponentInstance {} *x6; struct AudioComponentDescription { unsigned int x_7_1_1; unsigned int x_7_1_2; unsigned int x_7_1_3; unsigned int x_7_1_4; unsigned int x_7_1_5; } x7; id x8; struct vector<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> >, std::__1::allocator<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > > > { struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_9_1_1; struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_9_1_2; struct __compressed_pair<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > *, std::__1::allocator<std::__1::unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > > > { struct unique_ptr<AUv3InstanceBase::ClientPropertyListener, std::__1::default_delete<AUv3InstanceBase::ClientPropertyListener> > {} *x_3_2_1; } x_9_1_3; } x9; struct unique_ptr<AUv3InstanceBase::AllParameterListener, std::__1::default_delete<AUv3InstanceBase::AllParameterListener> > { struct __compressed_pair<AUv3InstanceBase::AllParameterListener *, std::__1::default_delete<AUv3InstanceBase::AllParameterListener> > { struct AllParameterListener {} *x_1_2_1; } x_10_1_1; } x10; struct AUv3RenderAdapter { struct CAMutex { int (**x_1_2_1)(); char *x_1_2_2; struct _opaque_pthread_t {} *x_1_2_3; struct _opaque_pthread_mutex_t { long x_4_3_1; BOOL x_4_3_2[40]; } x_1_2_4; } x_11_1_1; struct vector<AUv3RenderAdapter::AUInputElement, std::__1::allocator<AUv3RenderAdapter::AUInputElement> > { struct AUInputElement {} *x_2_2_1; struct AUInputElement {} *x_2_2_2; struct __compressed_pair<AUv3RenderAdapter::AUInputElement *, std::__1::allocator<AUv3RenderAdapter::AUInputElement> > { struct AUInputElement {} *x_3_3_1; } x_2_2_3; } x_11_1_2; id /* block */ x_11_1_3; } x11; id /* block */ x12; id /* block */ x13; struct ParameterMap { id x_14_1_1; struct vector<AUv3InstanceBase::ScopeElementIDObj, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_2_2_1; struct ScopeElementIDObj {} *x_2_2_2; struct __compressed_pair<AUv3InstanceBase::ScopeElementIDObj *, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_3_1; } x_2_2_3; } x_14_1_2; struct vector<AUv3InstanceBase::ScopeElementIDObj, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_2_1; struct ScopeElementIDObj {} *x_3_2_2; struct __compressed_pair<AUv3InstanceBase::ScopeElementIDObj *, std::__1::allocator<AUv3InstanceBase::ScopeElementIDObj> > { struct ScopeElementIDObj {} *x_3_3_1; } x_3_2_3; } x_14_1_3; } x14; struct HostCallbackInfo { void *x_15_1_1; int (*x_15_1_2)(); int (*x_15_1_3)(); int (*x_15_1_4)(); int (*x_15_1_5)(); } x15; }*)arg1;

@end
