/* Generated by RuntimeBrowser
   Image: /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface _UIRemoteKeyboards : NSObject <_UIKeyboardArbitrationClient, _UIRemoteKeyboardControllerDelegate, _UIRemoteKeyboardDistributedViewSource> {
    NSMutableArray * _activePIDs;
    NSXPCConnection * _connection;
    BOOL  _currentKeyboard;
    _UIKeyboardChangedInformation * _currentState;
    int  _expectedSuppression;
    BOOL  _expectingInitialState;
    BOOL  _hasFocus;
    int  _hostedCount;
    int  _ignoreLayoutSubviews;
    UIView * _keyboardSnapshot;
    float  _requiredLevel;
    NSHashTable * _windowControllers;
}

@property (retain) NSXPCConnection *connection;
@property (readonly, retain) NSArray *currentHostedPIDs;
@property BOOL currentKeyboard;
@property (retain) _UIKeyboardChangedInformation *currentState;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (readonly) float intersectionHeight;
@property (readonly) BOOL keyboardActive;
@property (readonly) BOOL keyboardVisible;
@property (readonly) UIWindow *keyboardWindow;
@property (readonly) <_UIKeyboardArbitration> *proxy;
@property (readonly) BOOL remoteKeyboardUndocked;
@property (readonly) Class superclass;

+ (BOOL)enabled;
+ (id)sharedRemoteKeyboards;

- (void)_performOnDistributedControllersExceptSelf:(id /* block */)arg1;
- (void)addHostedWindowView:(id)arg1 fromPID:(int)arg2;
- (BOOL)allowedToShowKeyboard;
- (void)checkConnection;
- (void)completeMoveKeyboardForWindow:(id)arg1;
- (id)connection;
- (void)controllerDidLayoutSubviews:(id)arg1;
- (id)currentHostedPIDs;
- (BOOL)currentKeyboard;
- (id)currentState;
- (void)dealloc;
- (void)didSuspend:(id)arg1;
- (void)finishWithHostedWindow;
- (void)forceKeyboardAway;
- (void)ignoreLayoutNotifications:(id /* block */)arg1;
- (id)init;
- (float)intersectionHeight;
- (BOOL)isRotating;
- (BOOL)keyboardActive;
- (void)keyboardChanged:(id)arg1 shouldConsiderSnapshottingKeyboard:(BOOL)arg2;
- (void)keyboardChangedCompleted;
- (BOOL)keyboardVisible;
- (id)keyboardWindow;
- (Class)keyboardWindowClass;
- (BOOL)needsToShowKeyboardForWindow:(id)arg1;
- (void)peekApplicationEvent:(id)arg1;
- (void)performOnControllers:(id /* block */)arg1;
- (void)performOnDistributedControllers:(id /* block */)arg1;
- (id)prepareForHostedWindow;
- (void)prepareToMoveKeyboard:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 showing:(BOOL)arg2 forScreen:(id)arg3;
- (id)proxy;
- (void)queue_applicationLostFocusWithCompletion:(id /* block */)arg1;
- (void)queue_failedConnection:(id)arg1;
- (void)queue_keyboardChanged:(id)arg1 onComplete:(id /* block */)arg2;
- (void)queue_keyboardChangedWithCompletion:(id /* block */)arg1;
- (void)queue_keyboardSuppressed:(BOOL)arg1 withCompletion:(id /* block */)arg2;
- (void)queue_keyboardTransition:(id)arg1 event:(unsigned int)arg2 withInfo:(id)arg3 onComplete:(id /* block */)arg4;
- (void)registerController:(id)arg1;
- (BOOL)remoteKeyboardUndocked;
- (void)resetSnapshotWithWindowCheck:(BOOL)arg1;
- (void)setConnection:(id)arg1;
- (void)setCurrentKeyboard:(BOOL)arg1;
- (void)setCurrentState:(id)arg1;
- (void)setSuppressingKeyboard:(BOOL)arg1;
- (void)setWindowEnabled:(BOOL)arg1;
- (void)setWindowLevel:(float)arg1 sceneLevel:(float)arg2 forScreen:(id)arg3;
- (void)startConnection;
- (void)stopConnection;
- (void)unregisterController:(id)arg1;
- (id)viewHostForWindow:(id)arg1;
- (BOOL)wantsToShowKeyboardForWindow:(id)arg1;
- (void)willResume:(id)arg1;

// _UIRemoteKeyboards (ForXPC)

- (void)completeTransition:(id)arg1 withInfo:(id)arg2;
- (void)setPlacement:(id)arg1 quietly:(BOOL)arg2 animated:(BOOL)arg3;
- (void)startTransition:(id)arg1 withInfo:(id)arg2;
- (void)updateTransition:(id)arg1 withInfo:(id)arg2;

@end
