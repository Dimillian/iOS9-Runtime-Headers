/* Generated by RuntimeBrowser
   Image: /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface UIView : UIResponder <NSCoding, NSISEngineDelegate, NSISVariableDelegate, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UITextEffectsOrdering, UITraitEnvironment, _UIFocusEnvironmentInternal, _UILayoutItem, _UIScrollNotification, _UITraitEnvironmentInternal> {
    UIPresentationController * __presentationControllerToNotifyOnLayoutSubviews;
    NSString * _backgroundColorSystemColorName;
    NSISVariable * _boundsHeightVariable;
    NSISVariable * _boundsWidthVariable;
    UITraitCollection * _cachedTraitCollection;
    float  _charge;
    NSMutableArray * _constraintsExceptingSubviewAutoresizingConstraints;
    id  _contentSizeNotificationToken;
    unsigned int  _countOfFocusedAncestorTrackingViewsInSubtree;
    unsigned int  _countOfMotionEffectsInSubtree;
    unsigned int  _countOfTraitChangeRespondersInDirectSubtree;
    id  _gestureInfo;
    NSMutableArray * _gestureRecognizers;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    }  _inferredLayoutMargins;
    UIColor * _interactionTintColor;
    NSMutableArray * _internalConstraints;
    CALayer * _layer;
    CALayer * _layerRetained;
    NSString * _layoutDebuggingIdentifier;
    NSISEngine * _layoutEngine;
    UILayoutGuide * _layoutMarginsGuide;
    NSISVariable * _minXVariable;
    NSISVariable * _minYVariable;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    }  _rawLayoutMargins;
    UILayoutGuide * _readableContentGuide;
    int  _retainCount;
    int  _semanticContentAttribute;
    BOOL  _shouldArchiveUIAppearanceTags;
    NSArray * _subviewCache;
    int  _tag;
    int  _tintAdjustmentDimmingCount;
    UIViewController * _viewDelegate;
    struct { 
        unsigned int userInteractionDisabled : 1; 
        unsigned int implementsDrawRect : 1; 
        unsigned int implementsDidScroll : 1; 
        unsigned int implementsMouseTracking : 1; 
        unsigned int implementsIntrinsicContentSize : 1; 
        unsigned int hasBackgroundColor : 1; 
        unsigned int isOpaque : 1; 
        unsigned int becomeFirstResponderWhenCapable : 1; 
        unsigned int interceptMouseEvent : 1; 
        unsigned int deallocating : 1; 
        unsigned int debugFlash : 1; 
        unsigned int debugSkippedSetNeedsDisplay : 1; 
        unsigned int debugScheduledDisplayIsRequired : 1; 
        unsigned int isInAWindow : 1; 
        unsigned int isAncestorOfFirstResponder : 1; 
        unsigned int dontAutoresizeSubviews : 1; 
        unsigned int autoresizeMask : 6; 
        unsigned int patternBackground : 1; 
        unsigned int fixedBackgroundPattern : 1; 
        unsigned int dontAnimate : 1; 
        unsigned int superLayerIsView : 1; 
        unsigned int layerKitPatternDrawing : 1; 
        unsigned int multipleTouchEnabled : 1; 
        unsigned int exclusiveTouch : 1; 
        unsigned int hasViewController : 1; 
        unsigned int needsDidAppearOrDisappear : 1; 
        unsigned int gesturesEnabled : 1; 
        unsigned int deliversTouchesForGesturesToSuperview : 1; 
        unsigned int chargeEnabled : 1; 
        unsigned int skipsSubviewEnumeration : 1; 
        unsigned int needsDisplayOnBoundsChange : 1; 
        unsigned int hasTiledLayer : 1; 
        unsigned int hasLargeContent : 1; 
        unsigned int unused : 1; 
        unsigned int traversalMark : 1; 
        unsigned int appearanceIsInvalid : 1; 
        unsigned int monitorsSubtree : 1; 
        unsigned int hostsAutolayoutEngine : 1; 
        unsigned int constraintsAreClean : 1; 
        unsigned int subviewLayoutConstraintsAreClean : 1; 
        unsigned int intrinsicContentSizeConstraintsAreClean : 1; 
        unsigned int potentiallyHasDanglyConstraints : 1; 
        unsigned int doesNotTranslateAutoresizingMaskIntoConstraints : 1; 
        unsigned int autolayoutIsClean : 1; 
        unsigned int layoutFlushingDisabled : 1; 
        unsigned int layingOutFromConstraints : 1; 
        unsigned int wantsAutolayout : 1; 
        unsigned int subviewWantsAutolayout : 1; 
        unsigned int isApplyingValuesFromEngine : 1; 
        unsigned int isInAutolayout : 1; 
        unsigned int isInAnimatedLayout : 1; 
        unsigned int isSubviewUpdatingAutoresizingConstraints : 1; 
        unsigned int isUpdatingConstraints : 1; 
        unsigned int isHostingUpdateConstraintsPassDuringLayout : 1; 
        unsigned int isRunningEngineLevelConstraintsPass : 1; 
        unsigned int isUnsatisfiableConstraintsLoggingSuspended : 1; 
        unsigned int systemLayoutFittingSizeNeedsUpdate : 1; 
        unsigned int systemLayoutFittingSizeNeedsUpdateInWholeSubtree : 1; 
        unsigned int isCalculatingSystemLayoutFittingSize : 1; 
        unsigned int stayHiddenAwaitingReuse : 1; 
        unsigned int stayHiddenAfterReuse : 1; 
        unsigned int skippedLayoutWhileHiddenForReuse : 1; 
        unsigned int isPendingHiddenForAnimation : 1; 
        unsigned int hasMaskView : 1; 
        unsigned int hasVisualAltitude : 1; 
        unsigned int hasBackdropMaskViews : 1; 
        unsigned int backdropMaskViewFlags : 5; 
        unsigned int delaysTouchesForSystemGestures : 1; 
        unsigned int subclassShouldDelayTouchForSystemGestures : 1; 
        unsigned int hasMotionEffects : 1; 
        unsigned int backdropOverlayMode : 2; 
        unsigned int tintAdjustmentMode : 2; 
        unsigned int isReferenceView : 1; 
        unsigned int focusState : 2; 
        unsigned int hasUserInterfaceIdiom : 1; 
        unsigned int userInterfaceIdiom : 3; 
        unsigned int ancestorDefinesTintColor : 1; 
        unsigned int ancestorDefinesTintAdjustmentMode : 1; 
        unsigned int needsTraitCollectionDidChange : 1; 
        unsigned int coloredViewBounds : 1; 
        unsigned int coloredAlignmentRects : 1; 
        unsigned int coloredFocusItems : 1; 
        unsigned int preservesSuperviewMargins : 1; 
        unsigned int hasGeometryObservers : 1; 
        unsigned int wantsGeometryChanges : 1; 
        unsigned int hasTraitStorageList : 1; 
        unsigned int cachedTraitCollectionIsValid : 1; 
        unsigned int dontUpdateInferredLayoutMargins : 1; 
        unsigned int implementsViewForBaselineLayout : 1; 
        unsigned int tracksFocusedAncestors : 1; 
        unsigned int hasLayoutArrangements : 1; 
        unsigned int isHiddenManagedByLayoutArrangement : 1; 
    }  _viewFlags;
}

@property (setter=_setAccessoryViewFrame:, nonatomic) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } _accessoryViewFrame;
@property (getter=_ancestorDefinesTintAdjustmentMode, setter=_setAncestorDefinesTintAdjustmentMode:, nonatomic) BOOL _ancestorDefinesTintAdjustmentMode;
@property (getter=_ancestorDefinesTintColor, setter=_setAncestorDefinesTintColor:, nonatomic) BOOL _ancestorDefinesTintColor;
@property (nonatomic, readonly) UIView *_backdropMaskViewForColorTint;
@property (nonatomic, readonly) UIView *_backdropMaskViewForFilters;
@property (nonatomic, readonly) UIView *_backdropMaskViewForGrayscaleTint;
@property (nonatomic, readonly) NSArray *_backdropMaskViews;
@property (nonatomic, readonly, retain) NSISVariable *_boundsHeightVariable;
@property (nonatomic, readonly, retain) NSISVariable *_boundsWidthVariable;
@property (nonatomic, readonly, retain) NSArray *_constraintsExceptingSubviewAutoresizingConstraints;
@property (nonatomic) unsigned int _countOfFocusedAncestorTrackingViewsInSubtree;
@property (nonatomic) unsigned int _countOfMotionEffectsInSubtree;
@property (nonatomic, readonly) int _hiddenManagedByLayoutArrangementCount;
@property (setter=_setInferredLayoutMargins:, nonatomic) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } _inferredLayoutMargins;
@property (nonatomic, readonly) UIKBRenderConfig *_inheritedRenderConfig;
@property (setter=_setInteractionTintColor:, nonatomic, retain) UIColor *_interactionTintColor;
@property (setter=_setInternalConstraints:, nonatomic, retain) NSMutableArray *_internalConstraints;
@property (setter=_setLayoutDebuggingIdentifier:, nonatomic, copy) NSString *_layoutDebuggingIdentifier;
@property (setter=_setLayoutEngine:, nonatomic, retain) NSISEngine *_layoutEngine;
@property (nonatomic, readonly) BOOL _lightStyleRenderConfig;
@property (setter=_setMaskView:, nonatomic, retain) UIView *_maskView;
@property (setter=_setMayRemainFocused:, nonatomic) BOOL _mayRemainFocused;
@property (nonatomic, readonly, retain) NSISVariable *_minXVariable;
@property (nonatomic, readonly, retain) NSISVariable *_minYVariable;
@property (nonatomic, readonly, retain) NSMutableArray *_mutableLayoutArrangements;
@property (nonatomic, readonly, retain) NSMutableArray *_mutableLayoutGuides;
@property (nonatomic, readonly) int _pendingHiddenCount;
@property (getter=_presentationControllerToNotifyOnLayoutSubviews, setter=_setPresentationControllerToNotifyOnLayoutSubviews:, nonatomic, retain) UIPresentationController *_presentationControllerToNotifyOnLayoutSubviews;
@property (setter=_setRawLayoutMargins:, nonatomic) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } _rawLayoutMargins;
@property (nonatomic, readonly) struct CGSize { float x1; float x2; } _sensitivitySize;
@property (setter=_setShouldArchiveUIAppearanceTags:, nonatomic) BOOL _shouldArchiveUIAppearanceTags;
@property (nonatomic, readonly) BOOL _shouldReverseLayoutDirection;
@property (setter=_setTracksFocusedAncestors:, nonatomic) BOOL _tracksFocusedAncestors;
@property (getter=_userInterfaceIdiom, setter=_setUserInterfaceIdiom:, nonatomic) int _userInterfaceIdiom;
@property (nonatomic, readonly) BOOL _wantsGeometryChangeNotification;
@property (getter=_backgroundColorSystemColorName, setter=_setBackgroundColorSystemColorName:, nonatomic, retain) NSString *backgroundColorSystemColorName;
@property (readonly) NSLayoutYAxisAnchor *bottomAnchor;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } bounds;
@property (nonatomic) struct CGPoint { float x1; float x2; } center;
@property (readonly) NSLayoutXAxisAnchor *centerXAnchor;
@property (readonly) NSLayoutYAxisAnchor *centerYAnchor;
@property (nonatomic, readonly) UIBezierPath *collisionBoundingPath;
@property (nonatomic, readonly) unsigned int collisionBoundsType;
@property (getter=_contentSizeNotificationToken, setter=_setContentSizeNotificationToken:, nonatomic, retain) id contentSizeNotificationToken;
@property (getter=_currentScreenScale, nonatomic, readonly) float currentScreenScale;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL deliversTouchesForGesturesToSuperview;
@property (readonly, copy) NSString *description;
@property (readonly) NSLayoutYAxisAnchor *firstBaselineAnchor;
@property (nonatomic) struct CGPoint { float x1; float x2; } focusDirection;
@property (getter=isFocused, nonatomic, readonly) BOOL focused;
@property (nonatomic) BOOL gesturesEnabled;
@property (readonly) unsigned int hash;
@property (readonly) NSLayoutDimension *heightAnchor;
@property (nonatomic, retain) UIColor *interactionTintColor;
@property (readonly) NSLayoutYAxisAnchor *lastBaselineAnchor;
@property (nonatomic, readonly) CALayer *layer;
@property (setter=_setLayoutMarginsGuide:, nonatomic, retain) UILayoutGuide *layoutMarginsGuide;
@property (readonly) NSLayoutXAxisAnchor *leadingAnchor;
@property (readonly) NSLayoutXAxisAnchor *leftAnchor;
@property (getter=_maskView, setter=_setMaskView:, nonatomic, retain) UIView *maskView;
@property (getter=_monitorsSubtree, setter=_setMonitorsSubtree:, nonatomic) BOOL monitorsSubtree;
@property (nonatomic, readonly) UIView *preferredFocusedView;
@property (setter=_setReadableContentGuide:, nonatomic, retain) UILayoutGuide *readableContentGuide;
@property (readonly) NSLayoutXAxisAnchor *rightAnchor;
@property (nonatomic) int semanticContentAttribute;
@property (nonatomic) BOOL skipsSubviewEnumeration;
@property (readonly) Class superclass;
@property (nonatomic) int tag;
@property (readonly) NSLayoutYAxisAnchor *topAnchor;
@property (readonly) NSLayoutXAxisAnchor *trailingAnchor;
@property (nonatomic, readonly) UITraitCollection *traitCollection;
@property (nonatomic) struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; } transform;
@property (getter=_isUnsatisfiableConstraintsLoggingSuspended, setter=_setUnsatisfiableConstraintsLoggingSuspended:, nonatomic) BOOL unsatisfiableConstraintsLoggingSuspended;
@property (getter=isUserInteractionEnabled, nonatomic) BOOL userInteractionEnabled;
@property (getter=_viewDelegate, setter=_setViewDelegate:, nonatomic) UIViewController *viewDelegate;
@property (nonatomic) BOOL viewTraversalMark;
@property (readonly) NSLayoutDimension *widthAnchor;

+ (void)_addHierarchyTrackingVisitor:(id)arg1;
+ (id)_appearanceWhenContainedIn:(id)arg1;
+ (void)_beginSuspendingMotionEffectsForReason:(id)arg1;
+ (id)_defaultInteractionTintColorForIdiom:(int)arg1;
+ (void)_endSuspendingMotionEffectsForReason:(id)arg1;
+ (id)_motionEffectEngine;
+ (BOOL)_motionEffectsEnabled;
+ (BOOL)_motionEffectsSupported;
+ (void)_performSystemAppearanceModifications:(id /* block */)arg1;
+ (BOOL)_preventsAppearanceProxyCustomization;
+ (void)_recenterMotionEffects;
+ (void)_removeHierarchyTrackingVisitor:(id)arg1;
+ (void)_setAnimatedPropertiesEnabled:(BOOL)arg1;
+ (void)_setShouldEnableUIKitParallaxEffects:(BOOL)arg1;
+ (void)_setTintColorUpdating:(BOOL)arg1;
+ (BOOL)_shouldEnableUIKitDefaultParallaxEffects;
+ (BOOL)_tintColorUpdating;
+ (id)appearance;
+ (id)appearanceForTraitCollection:(id)arg1;
+ (id)appearanceForTraitCollection:(id)arg1 whenContainedIn:(Class)arg2;
+ (id)appearanceForTraitCollection:(id)arg1 whenContainedInInstancesOfClasses:(id)arg2;
+ (id)appearanceMatchingProperties:(id)arg1 whenContainedInInstancesOfClasses:(id)arg2;
+ (id)appearanceWhenContainedIn:(Class)arg1;
+ (id)appearanceWhenContainedInInstancesOfClasses:(id)arg1;
+ (Class)layerClass;
+ (int)userInterfaceLayoutDirectionForSemanticContentAttribute:(int)arg1;

- (void).cxx_destruct;
- (id)__darkSystemColorForColor:(id)arg1;
- (void)_addConstraintPendingAnimatedChanges:(id)arg1;
- (void)_addGeometryChangeObserver:(id)arg1;
- (void)_addLayoutArrangement:(id)arg1;
- (void)_addMotionEffect:(id)arg1;
- (void)_addParentGeometryObservers;
- (void)_addPossibleFocusableElementsToArray:(id)arg1;
- (void)_addPossibleRespondersToArray:(id)arg1;
- (BOOL)_allowsFocusToLeaveViaHeading:(unsigned int)arg1;
- (BOOL)_ancestorDefinesTintAdjustmentMode;
- (BOOL)_ancestorDefinesTintColor;
- (void)_ancestorDidUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (id)_ancestorSharedWithView:(id)arg1;
- (void)_ancestorWillUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (id)_anyBackdropMaskView;
- (id)_appearanceContainer;
- (Class)_appearanceGuideClass;
- (BOOL)_appearanceIsInvalid;
- (id)_appearanceTraitCollection;
- (BOOL)_applyKeyPathsAndRelativeValues:(id)arg1 forMotionEffect:(id)arg2;
- (int)_backdropMaskViewFlags;
- (id)_backdropMaskViewForColorBurnTint;
- (id)_backdropMaskViewForColorTint;
- (id)_backdropMaskViewForDarkeningTint;
- (id)_backdropMaskViewForFilters;
- (id)_backdropMaskViewForFlag:(int)arg1;
- (id)_backdropMaskViewForGrayscaleTint;
- (id)_backdropMaskViews;
- (struct CGColor { }*)_backgroundCGColor;
- (id)_backgroundColorSystemColorName;
- (float)_baselineOffsetFromBottom;
- (BOOL)_becomeFirstResponderWhenPossible;
- (void)_beginOcclusion:(id)arg1;
- (void)_beginSuspendingMotionEffects;
- (BOOL)_bitFlagValueAfterIncrementingHiddenManagementCountForKey:(const char *)arg1 withIncrement:(int)arg2 bitFlagValue:(BOOL)arg3;
- (id)_boundsHeightVariable;
- (id)_boundsWidthVariable;
- (BOOL)_canBecomeFirstResponderWhenPossible;
- (id)_childFocusRegions;
- (void)_cleanUpLayoutArrangements;
- (void)_clearBecomeFirstResponderWhenCapable;
- (id)_constraintsArray;
- (id)_constraintsExceptingSubviewAutoresizingConstraints;
- (BOOL)_containsPreferredFocusableView;
- (id)_contentHeightVariable;
- (float)_contentMargin;
- (id)_contentSizeNotificationToken;
- (id)_contentWidthVariable;
- (float)_convertVisualAltitude:(float)arg1 fromView:(id)arg2;
- (float)_convertVisualAltitude:(float)arg1 toView:(id)arg2;
- (unsigned int)_countOfFocusedAncestorTrackingViewsInSubtree;
- (unsigned int)_countOfMotionEffectsInSubtree;
- (void)_createLayerWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (int)_currentUserInterfaceIdiom;
- (void)_decrementHiddenManagedByLayoutArrangementCount;
- (void)_decrementPendingHiddenCount;
- (int)_defaultTintAdjustmentMode;
- (void)_didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (BOOL)_disableGeometryObserverNotification;
- (void)_dispatchMotionEffectsVisitorWithDelta:(int)arg1;
- (void)_dispatchTintColorVisitorWithReasons:(unsigned int)arg1;
- (void)_dispatchTrackingFocusVisitorWithDelta:(int)arg1;
- (BOOL)_drawViewHierarchyInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)_drawsAsBackdropOverlay;
- (void)_endOcclusion:(id)arg1;
- (void)_endSuspendingMotionEffects;
- (BOOL)_fakeShouldAnimatePropertyWithKey:(id)arg1;
- (float)_firstBaselineOffsetFromTop;
- (id)_firstCommonAncestorToView:(id)arg1;
- (void)_flushConstraintsPendingAnimatedChanges;
- (id)_focusDebugOverlayParentView;
- (BOOL)_focusRegionCanBecomeFocused;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_focusRegionFrame;
- (id)_focusRegionGuides;
- (BOOL)_focusRegionIsEligibleForFocus;
- (id)_focusRegionItem;
- (id)_focusRegionView;
- (void)_focusedAncestorDidChange:(id)arg1;
- (void)_focusedAncestorWillChange:(id)arg1;
- (int)_focusedSound;
- (void)_focusedViewDidChange:(id)arg1;
- (void)_focusedViewWillChange:(id)arg1;
- (id)_generateBackdropMaskImage;
- (id)_generateBackdropMaskViewForFlag:(int)arg1;
- (void)_geometryChanges:(id)arg1 forAncestor:(id)arg2;
- (BOOL)_hasLayoutArrangements;
- (BOOL)_hasNormalTintAdjustmentMode;
- (BOOL)_hasOpaqueBackground;
- (int)_hiddenManagedByLayoutArrangementCount;
- (int)_hiddenManagementCountForKey:(const char *)arg1 bitFlagValue:(BOOL)arg2;
- (id)_idleModeLayoutAttributes;
- (float)_imageButtonMargin;
- (BOOL)_imageSnapshotCapturedAllContent;
- (void)_incrementHiddenManagedByLayoutArrangementCount;
- (void)_incrementPendingHiddenCount;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })_inferredLayoutMargins;
- (id)_inheritedInteractionTintColor;
- (void)_insertIdleModeDimmingOverlay:(id)arg1;
- (id)_interactionTintColor;
- (id)_internalConstraints;
- (void)_intrinsicContentSizeInvalidatedForChildView:(id)arg1;
- (void)_invalidateAppearanceForSubviewsOfClass:(Class)arg1;
- (void)_invalidateAppearanceForTraitCollection:(id)arg1;
- (BOOL)_isChargeEnabled;
- (BOOL)_isEligibleForFocus;
- (BOOL)_isFocusableElement;
- (BOOL)_isFocusedOrAncestorOfFocusedView;
- (BOOL)_isInAnimatedLayout;
- (BOOL)_isInHierarchyAllowingMotionEffects;
- (BOOL)_isInVisibleHierarchy;
- (BOOL)_isTransparentFocusRegion;
- (BOOL)_isUnsatisfiableConstraintsLoggingSuspended;
- (Class)_layerClass;
- (id)_layoutDebuggingIdentifier;
- (id)_layoutEngine;
- (void)_layoutMarginsDidChange;
- (id)_maskView;
- (id)_minXVariable;
- (id)_minYVariable;
- (id)_motionEffects;
- (BOOL)_motionEffectsAreSuspended;
- (id)_mutableLayoutArrangements;
- (id)_mutableLayoutArrangementsCreateIfNecessary;
- (id)_mutableLayoutGuides;
- (id)_mutableLayoutGuidesCreateIfNecessary;
- (id)_nextKeyResponder;
- (id)_normalInheritedTintColor;
- (void)_noteTraitsDidChangeRecursively;
- (void)_notifyArrangementsOfChangeInItem:(id)arg1 withSelector:(SEL)arg2;
- (void)_notifyArrangementsOfIntrinsicContentSizeInvalidatedForItem:(id)arg1;
- (void)_notifyGeometryObserversWithChangeInfo:(id)arg1;
- (id)_parallaxMotionEffect;
- (id)_parentFocusEnvironment;
- (int)_pendingHiddenCount;
- (id)_preferredConfigurationForFocusAnimation:(int)arg1 inContext:(id)arg2;
- (double)_preferredDurationForFocusAnimation:(int)arg1 inContext:(id)arg2;
- (float)_preferredDurationScaleFactorForFocusAnimation:(int)arg1 inContext:(id)arg2;
- (id)_presentationControllerToNotifyOnLayoutSubviews;
- (id)_previousKeyResponder;
- (int)_primitiveTintAdjustmentMode;
- (void)_processDidChangeRecursivelyFromOldTraits:(id)arg1 toCurrentTraits:(id)arg2 forceNotification:(BOOL)arg3;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })_rawLayoutMargins;
- (void)_receiveVisitor:(id)arg1;
- (void)_recursivelyConsiderResumingMotionEffects;
- (void)_recursivelyReconsiderMotionEffectSuspension;
- (void)_recursivelySetHiddenForBackdropMaskViews:(BOOL)arg1;
- (void)_recursivelySuspendMotionEffects;
- (void)_reestablishConstraintsForTransformChange;
- (void)_registerForGeometryChanges;
- (void)_removeBackdropMaskViews;
- (void)_removeGeometryChangeObserver:(id)arg1;
- (void)_removeLayoutArrangement:(id)arg1;
- (void)_removeMotionEffect:(id)arg1;
- (void)_removeParentGeometryObservers;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_responderExternalTouchRectForWindow:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_responderSelectionRectForWindow:(id)arg1;
- (void)_setAncestorDefinesTintAdjustmentMode:(BOOL)arg1;
- (void)_setAncestorDefinesTintColor:(BOOL)arg1;
- (void)_setAppearanceIsInvalid:(BOOL)arg1;
- (void)_setBackdropMaskView:(id)arg1 forFlag:(int)arg2;
- (void)_setBackdropMaskViewFlags:(int)arg1;
- (void)_setBackdropMaskViewForColorBurnTint:(id)arg1;
- (void)_setBackdropMaskViewForColorTint:(id)arg1;
- (void)_setBackdropMaskViewForDarkeningTint:(id)arg1;
- (void)_setBackdropMaskViewForFilters:(id)arg1;
- (void)_setBackdropMaskViewForGrayscaleTint:(id)arg1;
- (void)_setBackgroundColorSystemColorName:(id)arg1;
- (void)_setBoundsForBackdropMaskViews:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_setCenterForBackdropMaskViews:(struct CGPoint { float x1; float x2; })arg1;
- (void)_setCenterForBackdropMaskViews:(struct CGPoint { float x1; float x2; })arg1 convertPoint:(BOOL)arg2;
- (void)_setChargeEnabled:(BOOL)arg1;
- (void)_setContentSizeNotificationToken:(id)arg1;
- (void)_setDrawsAsBackdropOverlay:(BOOL)arg1;
- (void)_setDrawsAsBackdropOverlayWithBlendMode:(int)arg1;
- (void)_setFrameForBackdropMaskViews:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_setFrameForBackdropMaskViews:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 convertFrame:(BOOL)arg2;
- (void)_setHiddenForBackdropMaskViews:(BOOL)arg1;
- (void)_setIdleModeLayoutAttributes:(id)arg1;
- (void)_setInAnimatedLayout:(BOOL)arg1;
- (void)_setInferredLayoutMargins:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)_setInteractionTintColor:(id)arg1;
- (void)_setInternalConstraints:(id)arg1;
- (void)_setLayoutDebuggingIdentifier:(id)arg1;
- (void)_setLayoutEngine:(id)arg1;
- (void)_setLayoutMarginsGuide:(id)arg1;
- (void)_setMaskView:(id)arg1;
- (void)_setPresentationControllerToNotifyOnLayoutSubviews:(id)arg1;
- (void)_setRawLayoutMargins:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)_setReadableContentGuide:(id)arg1;
- (void)_setShouldArchiveUIAppearanceTags:(BOOL)arg1;
- (void)_setSpeedBumpEdges:(unsigned int)arg1;
- (void)_setTracksFocusedAncestors:(BOOL)arg1;
- (void)_setTraitStorageConstraints:(id)arg1;
- (void)_setTraitStorageSubviews:(id)arg1;
- (void)_setTransformForBackdropMaskViews:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg1;
- (void)_setUnsatisfiableConstraintsLoggingSuspended:(BOOL)arg1;
- (void)_setVisualAltitude:(float)arg1;
- (void)_setVisualAltitudeBias:(struct CGSize { float x1; float x2; })arg1;
- (BOOL)_shouldAnimatePropertyWithKey:(id)arg1;
- (BOOL)_shouldArchiveUIAppearanceTags;
- (BOOL)_shouldNotifyGeometryObservers;
- (BOOL)_shouldUpdateFocusInContext:(id)arg1;
- (unsigned int)_speedBumpEdges;
- (BOOL)_supportsBecomeFirstResponderWhenPossible;
- (float)_textButtonMargin;
- (id)_tintColorArchivingKey;
- (int)_topToBottomLeftToRightViewCompare:(id)arg1;
- (float)_touchSloppinessFactor;
- (BOOL)_tracksFocusedAncestors;
- (void)_traitCollectionDidChangeFromOldCollection:(id)arg1 toNewCollection:(id)arg2 scaleDidChange:(BOOL)arg3;
- (id)_traitCollectionForChildEnvironment:(id)arg1;
- (id)_traitStorageConstraints;
- (id)_traitStorageSubviews;
- (BOOL)_unapplyMotionEffect:(id)arg1;
- (void)_unregisterAllMotionEffects;
- (void)_unregisterForGeometryChanges;
- (void)_updateBackdropMaskFrames;
- (void)_updateBackdropMaskViewsInScrollView:(id)arg1;
- (void)_updateInferredLayoutMargins;
- (void)_updateLayoutMarginsGuideConstraintsIfApplicable;
- (void)_updateParallaxEffectWithAltitude:(float)arg1 bias:(struct CGSize { float x1; float x2; })arg2;
- (float)_visualAltitude;
- (struct CGSize { float x1; float x2; })_visualAltitudeBias;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_visualAltitudeSensitiveBoundsWithVisualAltitude:(float)arg1 edges:(unsigned int)arg2;
- (BOOL)_wantsGeometryChangeNotification;
- (void)_willUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (id)_window;
- (void)_wrappedProcessDidChangeRecursivelyFromOldTraits:(id)arg1 toCurrentTraits:(id)arg2 scaleDidChange:(BOOL)arg3 forceNotification:(BOOL)arg4;
- (void)addLayoutGuide:(id)arg1;
- (void)addMotionEffect:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })bounds;
- (BOOL)canBecomeFocused;
- (BOOL)cancelMouseTracking;
- (BOOL)cancelTouchTracking;
- (struct CGPoint { float x1; float x2; })center;
- (float)charge;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 fromCoordinateSpace:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 toCoordinateSpace:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 fromCoordinateSpace:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 toCoordinateSpace:(id)arg2;
- (void)dealloc;
- (void)didUpdateFocusFromView:(id)arg1;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (BOOL)drawViewHierarchyInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)drawViewHierarchyInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 afterScreenUpdates:(BOOL)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)focusGuides;
- (id)focusedView;
- (void)focusedViewDidChange;
- (void)focusedViewWillChange;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)interactionTintColor;
- (void)interactionTintColorDidChange;
- (BOOL)isAncestorOfItem:(id)arg1;
- (BOOL)isFocused;
- (BOOL)isUserInteractionEnabled;
- (id)layoutGuides;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })layoutMargins;
- (void)layoutMarginsDidChange;
- (BOOL)layoutMarginsFollowReadableWidth;
- (id)layoutMarginsGuide;
- (id)maskView;
- (id)motionEffects;
- (id)nextResponder;
- (id)nsli_boundsHeightVariable;
- (id)nsli_boundsWidthVariable;
- (id)nsli_contentHeightVariable;
- (id)nsli_contentWidthVariable;
- (id)nsli_minXVariable;
- (id)nsli_minYVariable;
- (id)preferredFocusedItem;
- (id)preferredFocusedView;
- (BOOL)preservesSuperviewLayoutMargins;
- (id)readableContentGuide;
- (void)removeLayoutGuide:(id)arg1;
- (void)removeMotionEffect:(id)arg1;
- (id)resizableSnapshotFromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 withCapInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg2;
- (id)resizableSnapshotViewFromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 afterScreenUpdates:(BOOL)arg2 withCapInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg3;
- (id)resizableSnapshotViewFromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 withCapInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg2;
- (int)semanticContentAttribute;
- (void)setCenter:(struct CGPoint { float x1; float x2; })arg1;
- (void)setCharge:(float)arg1;
- (void)setInteractionTintColor:(id)arg1;
- (void)setLayoutMargins:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)setLayoutMarginsFollowReadableWidth:(BOOL)arg1;
- (void)setMaskView:(id)arg1;
- (void)setMotionEffects:(id)arg1;
- (void)setNeedsFocusUpdate;
- (void)setNeedsPreferredFocusedItemUpdate;
- (void)setPreservesSuperviewLayoutMargins:(BOOL)arg1;
- (void)setSemanticContentAttribute:(int)arg1;
- (void)setTag:(int)arg1;
- (void)setTapDelegate:(id)arg1;
- (void)setTintAdjustmentMode:(int)arg1;
- (void)setTintColor:(id)arg1;
- (void)setTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg1;
- (void)setUserInteractionEnabled:(BOOL)arg1;
- (void)set_countOfFocusedAncestorTrackingViewsInSubtree:(unsigned int)arg1;
- (void)set_countOfMotionEffectsInSubtree:(unsigned int)arg1;
- (BOOL)shouldChangeFocusedItem:(id)arg1;
- (BOOL)shouldChangeFocusedItem:(id)arg1 heading:(unsigned int)arg2;
- (BOOL)shouldUpdateFocusFromView:(id)arg1 toView:(id)arg2 heading:(unsigned int)arg3;
- (BOOL)shouldUpdateFocusInContext:(id)arg1;
- (id)snapshot;
- (id)snapshotView;
- (id)snapshotViewAfterScreenUpdates:(BOOL)arg1;
- (void)startHeartbeat:(SEL)arg1 inRunLoopMode:(id)arg2;
- (void)stopHeartbeat:(SEL)arg1;
- (int)tag;
- (id)tapDelegate;
- (int)tintAdjustmentMode;
- (id)tintColor;
- (void)tintColorDidChange;
- (id)traitCollection;
- (void)traitCollectionDidChange:(id)arg1;
- (struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })transform;
- (void)updateFocusIfNeeded;
- (void)updatePreferredFocusedItemIfNeeded;
- (void)willUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (void)willUpdateFocusToView:(id)arg1;

// UIView (ActivityContinuation)

- (void)restoreUserActivityState:(id)arg1;
- (void)updateUserActivityState:(id)arg1;

// UIView (AdditionalLayoutSupport)

- (void)_accumulateViewConstraintsIntoArray:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_alignmentBounds;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_alignmentFrame;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_alignmentRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)_allLayoutEngines;
- (void)_applyISEngineLayoutToSubviewsSkippingSubview:(id)arg1;
- (id)_autolayoutTrace;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_boundsForAlignmentRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)_constraintsBrokenWhileUnsatisfiableConstraintsLoggingSuspended;
- (id)_constraintsValidityDescription;
- (id)_defaultLayoutDescription;
- (void)_discardLayoutEngine:(id)arg1;
- (BOOL)_hasLayoutEngine;
- (BOOL)_hostsLayoutEngine;
- (void)_informContainerThatSubviewsNeedUpdateConstraints;
- (void)_informContainerThatSubviewsNeedUpdateConstraintsNeedingLayout:(BOOL)arg1;
- (void)_initializeHostedLayoutEngine;
- (void)_internalUpdateConstraintsIfNeededAccumulatingViewsNeedingSecondPassAndViewsNeedingBaselineUpdate:(id)arg1 forSecondPass:(BOOL)arg2;
- (void)_invalidateIntrinsicContentSizeNeedingLayout:(BOOL)arg1;
- (BOOL)_isFloatingLayoutItem;
- (void)_is_layout;
- (BOOL)_is_needsLayout;
- (void)_is_setNeedsLayout;
- (id)_layoutDebuggingTitle;
- (id)_layoutDescriptionIfDifferentFromDefault;
- (id)_layoutEngineCreateIfNecessary;
- (id)_layoutEngineIfAvailable;
- (BOOL)_needsDoubleUpdateConstraintsPass;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_nsis_bounds;
- (void)_nsis_center:(struct CGPoint { float x1; float x2; }*)arg1 bounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg2 inEngine:(id)arg3;
- (void)_nsis_center:(struct CGPoint { float x1; float x2; }*)arg1 bounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg2 inEngine:(id)arg3 forLayoutGuide:(id)arg4;
- (struct CGSize { float x1; float x2; })_nsis_contentSize;
- (struct CGPoint { float x1; float x2; })_nsis_origin;
- (void)_parentalLayoutEngineDidChangeTo:(id)arg1;
- (BOOL)_potentiallyHasDanglyConstraints;
- (struct CGSize { float x1; float x2; })_preferredLayoutEngineToUserScalingCoefficients;
- (void)_recordConstraintBrokenWhileUnsatisfiableConstraintsLoggingSuspended:(id)arg1;
- (id)_recursiveAutolayoutTraceAtLevel:(int)arg1;
- (id)_recursiveConstraintsTraceAtLevel:(int)arg1;
- (id)_recursiveLayoutEngineDescription;
- (void*)_referenceView;
- (id)_rootView;
- (void)_setHostsLayoutEngine:(BOOL)arg1;
- (void)_setNeedsUpdateConstraints;
- (void)_setNeedsUpdateConstraintsNeedingLayout:(BOOL)arg1;
- (void)_setPotentiallyHasDanglyConstraints:(BOOL)arg1;
- (void)_setSubviewWantsAutolayoutTripWantsAutolayout:(BOOL)arg1;
- (void)_setWantsAutolayout;
- (BOOL)_supportsContentDimensionVariables;
- (void)_switchToLayoutEngine:(id)arg1;
- (struct CGSize { float x1; float x2; })_systemLayoutSizeFittingSize:(struct CGSize { float x1; float x2; })arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3 hasIntentionallyCollapsedHeight:(BOOL*)arg4;
- (BOOL)_uiib_hostsLayoutEngine;
- (id)_uiib_layoutEngineCreatingIfNecessary;
- (void)_uiib_setHostsLayoutEngine:(BOOL)arg1;
- (void)_updateConstraintsAtEngineLevelIfNeeded;
- (void)_updateConstraintsIfNeeded;
- (void)_updateConstraintsIfNeededAccumulatingViewsNeedingSecondPassAndViewsNeedingBaselineUpdate:(id)arg1 forSecondPass:(BOOL)arg2;
- (BOOL)_useContentDimensionVariablesForConstraintLowering;
- (BOOL)_usesAutoresizingConstraints;
- (BOOL)_usesLayoutEngineHostingConstraints;
- (id)_viewForBaselineLayoutAttribute:(int)arg1;
- (id)_viewForBaselineLayoutAttribute:(int)arg1 suppressHierarchyCheck:(BOOL)arg2;
- (BOOL)_wantsAutolayout;
- (BOOL)_wantsBaselineUpdatingFollowingConstraintsPass;
- (void)_withAutomaticEngineOptimizationDisabledIfEngineExists:(id /* block */)arg1;
- (void)_withUnsatisfiableConstraintsLoggingSuspendedIfEngineDelegateExists:(id /* block */)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })alignmentRectForFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })alignmentRectInsets;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frameForAlignmentRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)needsUpdateConstraints;
- (id)nsis_descriptionOfVariable:(id)arg1;
- (BOOL)nsis_shouldIntegralizeVariable:(id)arg1;
- (void)nsis_valueOfVariable:(id)arg1 didChangeInEngine:(id)arg2;
- (BOOL)nsis_valueOfVariableIsUserObservable:(id)arg1;
- (unsigned int)nsli_autoresizingMask;
- (struct CGSize { float x1; float x2; })nsli_convertSizeFromEngineSpace:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })nsli_convertSizeToEngineSpace:(struct CGSize { float x1; float x2; })arg1;
- (id)nsli_description;
- (BOOL)nsli_descriptionIncludesPointer;
- (struct CGSize { float x1; float x2; })nsli_engineToUserScalingCoefficients;
- (struct CGSize { float x1; float x2; })nsli_engineToUserScalingCoefficientsInEngine:(id)arg1;
- (BOOL)nsli_isCollectingConstraintChangesForLaterCoordinatedFlush:(id)arg1;
- (BOOL)nsli_isFlipped;
- (id)nsli_layoutEngine;
- (BOOL)nsli_lowerAttribute:(int)arg1 intoExpression:(id)arg2 withCoefficient:(float)arg3 container:(id)arg4;
- (BOOL)nsli_lowerAttribute:(int)arg1 intoExpression:(id)arg2 withCoefficient:(float)arg3 forConstraint:(id)arg4;
- (BOOL)nsli_lowerAttribute:(int)arg1 intoExpression:(id)arg2 withCoefficient:(float)arg3 forConstraint:(id)arg4 onBehalfOfLayoutGuide:(id)arg5;
- (BOOL)nsli_resolvedValue:(float*)arg1 forSymbolicConstant:(id)arg2 inConstraint:(id)arg3 error:(id*)arg4;
- (id)nsli_superitem;
- (void)setNeedsUpdateConstraints;
- (void)setTranslatesAutoresizingMaskIntoConstraints:(BOOL)arg1;
- (BOOL)translatesAutoresizingMaskIntoConstraints;
- (void)updateConstraints;
- (void)updateConstraintsIfNeeded;
- (id)viewForFirstBaselineLayout;
- (id)viewForLastBaselineLayout;

// UIView (Animation)

+ (BOOL)_addCompletion:(id /* block */)arg1;
+ (id /* block */)_alongsideAnimations;
+ (void)_animateWithAttributes:(id)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)_completeAnimationWithUUID:(id)arg1 duration:(double)arg2 curve:(int)arg3 reverse:(BOOL)arg4;
+ (id)_currentAnimationAttributes;
+ (int)_currentAnimationCurve;
+ (float)_currentAnimationDuration;
+ (id)_currentAnimationSettings;
+ (id)_defaultUIViewActionForLayer:(id)arg1 forKey:(id)arg2;
+ (id)_defaultUIViewAnimationForLayer:(id)arg1 forKey:(id)arg2;
+ (int)_degreesToRotateFromInterfaceOrientation:(int)arg1 toInterfaceOrientation:(int)arg2;
+ (void)_disableAnimationTracking:(id)arg1;
+ (void)_disableAnimationTracking:(id)arg1 clearTrackedAnimations:(BOOL)arg2;
+ (double)_durationForRotationFromInterfaceOrientation:(int)arg1 toInterfaceOrientation:(int)arg2;
+ (double)_durationForRotationFromInterfaceOrientation:(int)arg1 toInterfaceOrientation:(int)arg2 withBaseDuration:(double)arg3;
+ (id)_enableAnimationTracking;
+ (void)_finalizeStoppedAnimationWithUUID:(id)arg1 reverseAnimation:(BOOL)arg2;
+ (void)_finishAnimationTracking;
+ (BOOL)_hasActiveAnimationContext;
+ (void)_inheritAnimationParameters;
+ (BOOL)_isAnimationTracking;
+ (BOOL)_isInAnimationBlock;
+ (id)_performWithAnimationTracking:(id /* block */)arg1;
+ (void)_performWithDurationOverride:(double)arg1 animations:(id /* block */)arg2;
+ (void)_performWithoutAnimation:(id /* block */)arg1;
+ (void)_reverseAnimationWithUUID:(id)arg1 duration:(double)arg2 curve:(int)arg3;
+ (void)_setAlongsideAnimations:(id /* block */)arg1;
+ (void)_setAnimationAttributes:(id)arg1;
+ (void)_setAnimationAttributes:(id)arg1 skipDelegateAssignment:(BOOL)arg2;
+ (void)_setAnimationFilter:(int)arg1 forView:(id)arg2;
+ (void)_setAnimationFilterValue:(float)arg1;
+ (id)_startAnimationTracking;
+ (void)_stopAnimationWithUUID:(id)arg1;
+ (BOOL)areAnimationsEnabled;
+ (void)beginAnimations:(id)arg1;
+ (void)beginAnimations:(id)arg1 context:(void*)arg2;
+ (void)commitAnimations;
+ (void)disableAnimation;
+ (void)enableAnimation;
+ (void)endAnimations;
+ (double)inheritedAnimationDuration;
+ (void)performWithoutAnimation:(id /* block */)arg1;
+ (void)setAnimationAutoreverses:(BOOL)arg1;
+ (void)setAnimationBeginsFromCurrentState:(BOOL)arg1;
+ (void)setAnimationCurve:(int)arg1;
+ (void)setAnimationDelay:(double)arg1;
+ (void)setAnimationDelegate:(id)arg1;
+ (void)setAnimationDidStopSelector:(SEL)arg1;
+ (void)setAnimationDuration:(double)arg1;
+ (void)setAnimationFrameInterval:(double)arg1;
+ (void)setAnimationFromCurrentState:(BOOL)arg1;
+ (void)setAnimationPosition:(struct CGPoint { float x1; float x2; })arg1;
+ (void)setAnimationPreventsAdditive:(BOOL)arg1;
+ (void)setAnimationRepeatAutoreverses:(BOOL)arg1;
+ (void)setAnimationRepeatCount:(float)arg1;
+ (void)setAnimationRoundsToInteger:(BOOL)arg1;
+ (void)setAnimationStartDate:(id)arg1;
+ (void)setAnimationStartTime:(double)arg1;
+ (void)setAnimationTransition:(int)arg1 forView:(id)arg2 cache:(BOOL)arg3;
+ (void)setAnimationWillStartSelector:(SEL)arg1;
+ (void)setAnimationsEnabled:(BOOL)arg1;

- (id)_basicAnimationWithKeyPath:(id)arg1;
- (void)_clearAnimationFilters;
- (void)_enumerateDescendentViews:(id /* block */)arg1;
- (BOOL)_isInTransitionBlock;
- (void)_removeAllAnimations:(BOOL)arg1;
- (void)addAnimation:(id)arg1 forKey:(id)arg2;

// UIView (CALayerDelegate)

- (BOOL)_wantsReapplicationOfAutoLayout;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext { }*)arg2;
- (void)layoutSublayersOfLayer:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;

// UIView (ClassicAdditions)

- (BOOL)useBlockyMagnificationInClassic;

// UIView (Deprecated)

+ (void)setAnimationTransition:(int)arg1 forView:(id)arg2;

- (struct CGImage { }*)createSnapshotWithRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGPoint { float x1; float x2; })frameOrigin;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 forEvent:(struct __GSEvent { }*)arg2;
- (id)initWithSize:(struct CGSize { float x1; float x2; })arg1;
- (BOOL)isEnabled;
- (BOOL)pointInside:(struct CGPoint { float x1; float x2; })arg1 forEvent:(struct __GSEvent { }*)arg2;
- (void)setClipsSubviews:(BOOL)arg1;
- (void)setEnabled:(BOOL)arg1;
- (void)setFrameOrigin:(struct CGPoint { float x1; float x2; })arg1;
- (void)setSize:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })size;

// UIView (Geometry)

- (void)_applyAutoresizingMaskWithOldSuperviewSize:(struct CGSize { float x1; float x2; })arg1;
- (void)_applyISEngineLayoutValues;
- (struct CGPoint { float x1; float x2; })_convertOffset:(struct CGPoint { float x1; float x2; })arg1 fromView:(id)arg2;
- (struct CGPoint { float x1; float x2; })_convertOffset:(struct CGPoint { float x1; float x2; })arg1 toView:(id)arg2;
- (id)_hitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2 windowServerHitTestWindow:(id)arg3;
- (BOOL)_needsLayoutOnAnimatedBoundsChangeForNewBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)_needsLayoutOnAnimatedFrameChangeForNewFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_resizeWithOldSuperviewSize:(struct CGSize { float x1; float x2; })arg1;
- (void)_resizeWithOldSuperviewSize_ancient:(struct CGSize { float x1; float x2; })arg1;
- (BOOL)autoresizesSubviews;
- (unsigned int)autoresizingMask;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 fromView:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 toView:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 fromView:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 toView:(id)arg2;
- (struct CGSize { float x1; float x2; })convertSize:(struct CGSize { float x1; float x2; })arg1 fromView:(id)arg2;
- (struct CGSize { float x1; float x2; })convertSize:(struct CGSize { float x1; float x2; })arg1 toView:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })extent;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frame;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })hitRect;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (BOOL)isExclusiveTouch;
- (BOOL)isMultipleTouchEnabled;
- (struct CGPoint { float x1; float x2; })origin;
- (BOOL)pointInside:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (struct CGPoint { float x1; float x2; })position;
- (void)resizeSubviewsWithOldSize:(struct CGSize { float x1; float x2; })arg1;
- (void)resizeWithOldSuperviewSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setAutoresizesSubviews:(BOOL)arg1;
- (void)setAutoresizingMask:(unsigned int)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setExclusiveTouch:(BOOL)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forFields:(int)arg2;
- (void)setMultipleTouchEnabled:(BOOL)arg1;
- (void)setOrigin:(struct CGPoint { float x1; float x2; })arg1;
- (void)setPosition:(struct CGPoint { float x1; float x2; })arg1;
- (void)setRotationBy:(float)arg1;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (void)sizeToFit;

// UIView (Gestures)

- (BOOL)_canStartRotationFromEvent:(struct __GSEvent { }*)arg1;
- (BOOL)_canStartZoomFromEvent:(struct __GSEvent { }*)arg1;
- (void)_gestureChanged:(int)arg1 event:(struct __GSEvent { }*)arg2;
- (float)_internalScaleForScale:(float)arg1;
- (BOOL)_isRubberBanding;
- (float)_minimumZoomScaleDelta;
- (void)_resetZoomingWithEvent:(struct __GSEvent { }*)arg1;
- (void)_rotateFromEvent:(struct __GSEvent { }*)arg1;
- (void)_rotateToDegrees:(float)arg1 duration:(float)arg2 event:(struct __GSEvent { }*)arg3;
- (float)_rubberBandScaleForScale:(float)arg1;
- (void)_rubberbandZoomToEvent:(struct __GSEvent { }*)arg1 scale:(float)arg2;
- (float)_scaleForInternalScale:(float)arg1;
- (struct CGPoint { float x1; float x2; })_scrollPointForPoint:(struct CGPoint { float x1; float x2; })arg1 scale:(float)arg2 constrain:(BOOL)arg3 snapToEdge:(BOOL)arg4;
- (void)_setGestureInfoZoomScale:(float)arg1;
- (void)_setRotationAnimationProgress:(id)arg1;
- (void)_setZoomAnimationProgress:(id)arg1;
- (void)_setZoomScale:(float)arg1 duration:(double)arg2;
- (void)_startGesture:(int)arg1 event:(struct __GSEvent { }*)arg2;
- (BOOL)_startRotationFromEvent:(struct __GSEvent { }*)arg1;
- (BOOL)_startZoomFromEvent:(struct __GSEvent { }*)arg1;
- (void)_stopGesture:(int)arg1 event:(struct __GSEvent { }*)arg2;
- (void)_stopRotationFromEvent:(struct __GSEvent { }*)arg1;
- (void)_stopZoomFromEvent:(struct __GSEvent { }*)arg1;
- (float)_zoomScale;
- (void)_zoomToEvent:(struct __GSEvent { }*)arg1 scale:(float)arg2 animate:(BOOL)arg3 constrainScrollPoint:(BOOL)arg4;
- (void)_zoomToScale:(float)arg1 event:(struct __GSEvent { }*)arg2;
- (BOOL)_zoomWithEvent:(struct __GSEvent { }*)arg1;
- (void)animator:(id)arg1 startAnimation:(id)arg2;
- (void)animator:(id)arg1 stopAnimation:(id)arg2;
- (BOOL)canHandleGestures;
- (int)enabledGestures;
- (void)gestureChanged:(struct __GSEvent { }*)arg1;
- (id)gestureDelegate;
- (void)gestureEnded:(struct __GSEvent { }*)arg1;
- (void)gestureStarted:(struct __GSEvent { }*)arg1;
- (void)rotateToDegrees:(float)arg1;
- (float)rotationDegrees;
- (void)setEnabledGestures:(int)arg1;
- (void)setGestureDelegate:(id)arg1;
- (void)setRotationDegrees:(float)arg1 duration:(double)arg2;
- (void)setValue:(id)arg1 forGestureAttribute:(int)arg2;
- (int)stateForGestureType:(int)arg1;
- (id)valueForGestureAttribute:(int)arg1;
- (void)zoomToScale:(float)arg1;

// UIView (Gestures_Internal)

- (void)_animateToScrollPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)_animateZoomFailureToWindowPoint:(struct CGPoint { float x1; float x2; })arg1 scale:(float)arg2 duration:(float)arg3;
- (struct CGPoint { float x1; float x2; })_constrainedScrollPoint:(struct CGPoint { float x1; float x2; })arg1 contentSize:(struct CGSize { float x1; float x2; })arg2;
- (void)_gestureEnded:(struct __GSEvent { }*)arg1;
- (id)_gestureInfo;
- (struct CGSize { float x1; float x2; })_scrollerContentSize;
- (float)_zoomAnimationDurationForScale:(float)arg1;
- (float)_zoomAnimationProgress;
- (void)_zoomToScrollPoint:(struct CGPoint { float x1; float x2; })arg1 scale:(float)arg2 duration:(float)arg3 event:(struct __GSEvent { }*)arg4;
- (void)_zoomToWindowPoint:(struct CGPoint { float x1; float x2; })arg1 scale:(float)arg2 duration:(float)arg3 constrainScrollPoint:(BOOL)arg4 event:(struct __GSEvent { }*)arg5;

// UIView (Hierarchy)

- (BOOL)_associatedViewControllerForwardsAppearanceCallbacks:(id)arg1 performHierarchyCheck:(BOOL)arg2 isRoot:(BOOL)arg3;
- (id)_backgroundColor;
- (void)_didRemoveSubview:(id)arg1;
- (id)_findFirstSubviewWantingToBecomeFirstResponder;
- (void)_makeSubtreePerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)_makeSubtreePerformSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3 copySublayers:(BOOL)arg4;
- (void)_movedToFront;
- (void)_postMovedFromSuperview:(id)arg1;
- (void)_promoteSelfOrDescendantToFirstResponderIfNecessary;
- (void)_removeFirstResponderFromSubtree;
- (void)_setBackgroundColor:(id)arg1;
- (void)_setTraitStorageList:(id)arg1;
- (void)_setViewsJostledDuringUpdateConstraintsPass:(id)arg1;
- (BOOL)_shouldDirtyLayoutForConstraints;
- (void)_updateConstraintsAsNecessaryAndApplyLayoutFromEngine;
- (id)_viewsJostledDuringUpdateConstraintsPass;
- (void)_willChangeToIdiom:(int)arg1 onScreen:(id)arg2;
- (void)_willMoveToWindow:(id)arg1;
- (void)_willMoveToWindow:(id)arg1 withAncestorView:(id)arg2;
- (void)_willRemoveSubviewWantingAutolayout:(id)arg1;
- (void)addSubview:(id)arg1;
- (BOOL)becomeFirstResponder;
- (void)bringSubviewToFront:(id)arg1;
- (BOOL)canBecomeFirstResponder;
- (BOOL)containsView:(id)arg1;
- (void)deferredBecomeFirstResponder;
- (void)didAddSubview:(id)arg1;
- (void)didMoveToSuperview;
- (void)didMoveToWindow;
- (void)exchangeSubviewAtIndex:(int)arg1 withSubviewAtIndex:(int)arg2;
- (void)insertSubview:(id)arg1 above:(id)arg2;
- (void)insertSubview:(id)arg1 aboveSubview:(id)arg2;
- (void)insertSubview:(id)arg1 atIndex:(int)arg2;
- (void)insertSubview:(id)arg1 below:(id)arg2;
- (void)insertSubview:(id)arg1 belowSubview:(id)arg2;
- (BOOL)isDescendantOfView:(id)arg1;
- (void)layoutBelowIfNeeded;
- (void)layoutIfNeeded;
- (void)layoutSubviews;
- (void)movedFromSuperview:(id)arg1;
- (void)movedFromWindow:(id)arg1;
- (void)movedToSuperview:(id)arg1;
- (void)movedToWindow:(id)arg1;
- (void)removeFromSuperview;
- (void)sendSubviewToBack:(id)arg1;
- (void)setNeedsLayout;
- (id)subviews;
- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToSuperview:(id)arg1;
- (id)viewWithTag:(int)arg1;
- (void)willMoveToSuperview:(id)arg1;
- (void)willMoveToWindow:(id)arg1;
- (void)willRemoveSubview:(id)arg1;
- (id)window;

// UIView (Internal)

+ (void)_animateUsingDefaultDampedSpringWithDelay:(double)arg1 initialSpringVelocity:(float)arg2 options:(unsigned int)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;
+ (void)_animateUsingDefaultDampedSpringWithDelay:(double)arg1 initialSpringVelocity:(float)arg2 options:(unsigned int)arg3 animations:(id /* block */)arg4 start:(id /* block */)arg5 completion:(id /* block */)arg6;
+ (void)_animateUsingDefaultTimingWithOptions:(unsigned int)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)_animateUsingSpringWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned int)arg3 mass:(float)arg4 stiffness:(float)arg5 damping:(float)arg6 initialVelocity:(float)arg7 animations:(id /* block */)arg8 completion:(id /* block */)arg9;
+ (void)_animateUsingSpringWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned int)arg3 mass:(float)arg4 stiffness:(float)arg5 damping:(float)arg6 initialVelocity:(float)arg7 animations:(id /* block */)arg8 start:(id /* block */)arg9 completion:(id /* block */)arg10;
+ (void)_beginDisablingPromoteDescendantToFirstResponder;
+ (id)_disabledColorForTintColor:(id)arg1;
+ (double)_durationOfSpringAnimationWithMass:(float)arg1 stiffness:(float)arg2 damping:(float)arg3 velocity:(float)arg4;
+ (void)_endDisablingPromoteDescendantToFirstResponder;
+ (void)_initializeForIdiom:(int)arg1;
+ (BOOL)_invalidatesViewUponCreation;
+ (BOOL)_isAddingResponderToTree;
+ (void)_performBlockDelayingTriggeringResponderEvents:(id /* block */)arg1;
+ (void)_performBlockwithAutomaticAppearanceDisabled:(id /* block */)arg1;
+ (void)_performInitializationForIdiomIfNeccessary:(int)arg1;
+ (void)_registerClassForIdiomInitializationIfNeccessary;
+ (void)_setInvalidatesViewUponCreation:(BOOL)arg1;
+ (void)_setIsResponderAncestorOfFirstResponder:(BOOL)arg1 startingAtFirstResponder:(id)arg2;
+ (id)_topMostView:(id)arg1 reverse:(BOOL)arg2;
+ (void)_transitionFromView:(id)arg1 toView:(id)arg2 duration:(double)arg3 options:(unsigned int)arg4 animations:(id /* block */)arg5 completion:(id /* block */)arg6;

- (void)_addSubview:(id)arg1 positioned:(int)arg2 relativeTo:(id)arg3;
- (BOOL)_allowsArchivingAsSubview;
- (BOOL)_alwaysHandleInteractionEvents;
- (BOOL)_alwaysHandleScrollerMouseEvent;
- (BOOL)_animationIsPaused;
- (BOOL)_appliesExclusiveTouchToSubviewTree;
- (void)_applyAppearanceInvocations;
- (void)_applyScreenScaleToContentScaleFactorIfNotSpecifiedByDeveloper;
- (BOOL)_canDrawContent;
- (BOOL)_canHandleStatusBarTouchAtLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)_clearBecomeFirstResponderWhenCapableOnSubtree;
- (void)_collectKeyViews:(id)arg1;
- (BOOL)_containedInAbsoluteResponderChain;
- (id)_containingScrollView;
- (BOOL)_controlsOwnScaleFactor;
- (void*)_createImageFromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 padding:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg2;
- (struct CARenderServerBuffer { }*)_createRenderServerBufferFromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 padding:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg2;
- (float)_currentScreenScale;
- (BOOL)_delaysTouchesForSystemGestures;
- (void)_descendent:(id)arg1 didMoveFromSuperview:(id)arg2 toSuperview:(id)arg3;
- (void)_descendent:(id)arg1 willMoveFromSuperview:(id)arg2 toSuperview:(id)arg3;
- (void)_didChangeFromIdiom:(int)arg1 onScreen:(id)arg2 traverseHierarchy:(BOOL)arg3;
- (void)_didChangeFromIdiomOnScreen:(id)arg1 traverseHierarchy:(BOOL)arg2;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)_didScroll;
- (id)_disabledColor;
- (id)_encodableSubviews;
- (void)_encodeBackgroundColorWithCoder:(id)arg1;
- (void)_encodeFrameWithCoder:(id)arg1;
- (id)_firstResponder;
- (id)_gestureRecognizers;
- (id)_initWithLayer:(id)arg1;
- (id)_initWithMaskImage:(id)arg1;
- (id)_interceptEvent:(id)arg1;
- (id)_interceptMouseEvent:(struct __GSEvent { }*)arg1;
- (void)_invalidateLayerContents;
- (void)_invalidateSubviewCache;
- (BOOL)_isAlphaHittableAndHasAlphaHittableAncestors;
- (BOOL)_isAncestorOfFirstResponder;
- (BOOL)_isInAWindow;
- (BOOL)_isInExclusiveTouchSubviewTree;
- (BOOL)_isInteractiveElement;
- (BOOL)_isMemberOfViewControllerHierarchy:(id)arg1;
- (BOOL)_isRootForKeyResponderCycle;
- (BOOL)_monitorsSubtree;
- (void)_notifyReferenceViewSizeChange;
- (void)_performUpdatesForPossibleChangesOfIdiom:(int)arg1 orScreen:(id)arg2 traverseHierarchy:(BOOL)arg3;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)_recursivelyNameLayerTree;
- (void)_registerAsReferenceView;
- (void)_renderLayerContentsWithRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 inContext:(struct CGContext { }*)arg2;
- (void)_renderLayerWithRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 inContext:(struct CGContext { }*)arg2;
- (void)_renderSnapshotWithRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 inContext:(struct CGContext { }*)arg2;
- (void)_replaceLayer:(id)arg1;
- (id)_rootForKeyResponderCycle;
- (id)_scroller;
- (void)_setBackgroundCGColor:(struct CGColor { }*)arg1;
- (void)_setBackgroundCGColor:(struct CGColor { }*)arg1 withSystemColorName:(id)arg2;
- (void)_setContentImage:(id)arg1;
- (void)_setContentsTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg1;
- (void)_setDelaysTouchesForSystemGestures:(BOOL)arg1;
- (void)_setInterceptMouseEvent:(BOOL)arg1;
- (void)_setIsAncestorOfFirstResponder:(BOOL)arg1;
- (void)_setMonitorsSubtree:(BOOL)arg1;
- (void)_setUserInterfaceIdiom:(int)arg1;
- (void)_setViewDelegate:(id)arg1;
- (BOOL)_shouldApplyExclusiveTouch;
- (BOOL)_shouldDelayTouchForSystemGestures:(id)arg1;
- (BOOL)_shouldInheritScreenScaleAsContentScaleFactor;
- (BOOL)_shouldResignFirstResponderWithInteractionDisabled;
- (BOOL)_shouldTryPromoteDescendantToFirstResponder;
- (BOOL)_subclassImplementsDrawRect;
- (BOOL)_subclassImplementsIntrinsicContentSize;
- (BOOL)_subclassImplementsIntrinsicSizeWithinSize;
- (BOOL)_subclassImplementsViewForBaselineLayout;
- (void)_subscribeToScrollNotificationsIfNecessary:(id)arg1;
- (id)_subviewAtIndex:(int)arg1;
- (BOOL)_touchesInsideShouldHideCalloutBar;
- (void)_unregisterAsReferenceView;
- (void)_unregisterFromAnimators;
- (void)_unsubscribeToScrollNotificationsIfNecessary:(id)arg1;
- (void)_updateNeedsDisplayOnBoundsChange;
- (int)_userInterfaceIdiom;
- (id)_viewControllerForAncestor;
- (id)_viewControllerToNotifyOnLayoutSubviews;
- (id)_viewDelegate;
- (id)_viewIndexPath;
- (int)_viewOrderRelativeToView:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_visualAltitudeSensitiveBoundsWithInfiniteEdges:(unsigned int)arg1;
- (void)_webCustomViewWasAddedAsSubviewOfView:(id)arg1;
- (void)_webCustomViewWasRemovedFromSuperview:(id)arg1;
- (void)_webCustomViewWillBeRemovedFromSuperview;
- (void)_willChangeToIdiom:(int)arg1 onScreen:(id)arg2 traverseHierarchy:(BOOL)arg3;
- (void)_willChangeToIdiomOnScreen:(id)arg1 traverseHierarchy:(BOOL)arg2;
- (void)setSkipsSubviewEnumeration:(BOOL)arg1;
- (void)setViewTraversalMark:(BOOL)arg1;
- (BOOL)skipsSubviewEnumeration;
- (BOOL)viewTraversalMark;

// UIView (Rendering)

+ (void)flush;
+ (void)throttledFlush;

- (void*)_createIOSurfaceWithPadding:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)_enableLayerKitPatternDrawing:(BOOL)arg1;
- (id)_imageFromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)_isHiddenForReuse;
- (void)_resetContentRect;
- (void)_resetContentStretch;
- (void)_setContentRectInPixels:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forContentSize:(struct CGSize { float x1; float x2; })arg2;
- (void)_setContentStretchInPixels:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forContentSize:(struct CGSize { float x1; float x2; })arg2 shouldTile:(BOOL)arg3;
- (void)_setHiddenForReuse:(BOOL)arg1;
- (void)_setShouldRasterize:(BOOL)arg1;
- (float)alpha;
- (id)backgroundColor;
- (BOOL)clearsContextBeforeDrawing;
- (BOOL)clipsToBounds;
- (int)contentMode;
- (float)contentScaleFactor;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })contentStretch;
- (void)drawRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)forceDisplayIfNeeded;
- (BOOL)isHidden;
- (BOOL)isHiddenOrHasHiddenAncestor;
- (BOOL)isOpaque;
- (BOOL)needsDisplay;
- (BOOL)needsDisplayOnBoundsChange;
- (struct CGImage { }*)newSnapshotWithRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)recursivelyForceDisplayIfNeeded;
- (void)setAlpha:(float)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setClearsContext:(BOOL)arg1;
- (void)setClearsContextBeforeDrawing:(BOOL)arg1;
- (void)setClipsToBounds:(BOOL)arg1;
- (void)setContentMode:(int)arg1;
- (void)setContentScaleFactor:(float)arg1;
- (void)setContentStretch:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setContentsPosition:(int)arg1;
- (void)setFixedBackgroundPattern:(BOOL)arg1;
- (void)setHidden:(BOOL)arg1;
- (void)setNeedsDisplay;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setNeedsDisplayOnBoundsChange:(BOOL)arg1;
- (void)setOpaque:(BOOL)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleBounds;

// UIView (SyntheticEvents)

- (id)_scriptingInfo;
- (id)scriptingInfoWithChildren;

// UIView (UIAutocorrectInlinePrompt)

- (void)reduceWidth:(float)arg1;

// UIView (UIAutoscrollAdditions)

- (id)_enclosingScrollableScrollerIncludingSelf;
- (id)_enclosingScrollerIncludingSelf;
- (BOOL)_isScrollingEnabled;

// UIView (UIConstraintBasedLayout)

+ (BOOL)_retroactivelyRequiresConstraintBasedLayout;
+ (BOOL)requiresConstraintBasedLayout;

- (void)_addConstraint:(id)arg1;
- (id)_alignmentDebuggingOverlayCreateIfNecessary:(BOOL)arg1;
- (id)_autoresizingConstraints;
- (BOOL)_autoresizingConstraintsAreUpdated;
- (void)_autoresizingConstraints_frameDidChange;
- (struct CGSize { float x1; float x2; })_calculatedSystemLayoutSizeFittingSize:(struct CGSize { float x1; float x2; })arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3 hasIntentionallyCollapsedHeight:(BOOL*)arg4;
- (void)_constantsForHorizontalAutoresizingConstraints:(float*)arg1 :(float*)arg2;
- (void)_constantsForVerticalAutoresizingConstraints:(float*)arg1 :(float*)arg2;
- (id)_constraintForIdentifier:(id)arg1;
- (id)_constraintsEquivalentToAutoresizingMask;
- (void)_constraints_didChangeAutoresizingConstraintsArrayForContainedView:(id)arg1;
- (void)_constraints_frameDidChange;
- (void)_constraints_subviewDidChangeSuperview:(id)arg1;
- (void)_constraints_subviewWillChangeSuperview:(id)arg1;
- (void)_constraints_viewGeometryDidChange;
- (void)_constraints_willChangeAutoresizingConstraintsArrayForContainedView:(id)arg1;
- (struct CGSize { float x1; float x2; })_contentCompressionResistancePriorities;
- (BOOL)_contentHuggingDefault_isUsuallyFixedHeight;
- (BOOL)_contentHuggingDefault_isUsuallyFixedWidth;
- (struct CGSize { float x1; float x2; })_contentHuggingPriorities;
- (id)_contentSizeConstraints;
- (struct CGSize { float x1; float x2; })_defaultContentCompressionResistancePriorities;
- (struct CGSize { float x1; float x2; })_defaultContentHuggingPriorities;
- (id)_descendantWithAmbiguousLayout;
- (id)_descriptionForLayoutTrace;
- (void)_disableLayoutFlushing;
- (unsigned int)_effectiveAutoresizingMask;
- (void)_effectiveAutoresizingMask_autoresizesSubviewsChanged;
- (void)_enableLayoutFlushing;
- (void)_engineHostConstraints_frameDidChange;
- (void)_finishTemporaryInternalConstraints:(id)arg1 withEngine:(id)arg2;
- (BOOL)_forwardsSystemLayoutFittingSizeToContentView:(id)arg1;
- (id)_generateContentSizeConstraints;
- (void)_initializeLayoutEngine;
- (struct CGSize { float x1; float x2; })_intrinsicSizeWithinSize:(struct CGSize { float x1; float x2; })arg1;
- (void)_invalidateAutoresizingConstraints;
- (void)_invalidateEngineHostConstraints;
- (void)_invalidateLayoutEngineHostConstraints;
- (BOOL)_isViewHierarchyPreparedForConstraint:(id)arg1;
- (id)_layoutEngineHostConstraints;
- (BOOL)_layoutEngine_didAddLayoutConstraint:(id)arg1 roundingAdjustment:(float)arg2 mutuallyExclusiveConstraints:(id*)arg3;
- (void)_layoutEngine_willRemoveLayoutConstraint:(id)arg1;
- (void)_layoutEngine_windowDidChange;
- (id)_layoutVariablesWithAmbiguousValue;
- (id)_legendEntryForDescriptionForLayout;
- (void)_makeTemporaryInternalConstraintsWithEngine:(id)arg1 ignoreAutoresizingMaskConstraints:(BOOL)arg2 returningConstraintsForViewsNeedingSecondPass:(id*)arg3;
- (void)_populateEngineWithConstraintsForViewSubtree:(id)arg1 forComputingFittingSizeOfView:(id)arg2;
- (id)_primitiveContentCompressionResistancePrioritiesValue;
- (id)_primitiveContentHuggingPrioritiesValue;
- (void)_rebuildLayoutFromScratch;
- (void)_recursiveCollectTemporaryInternalConstraintsWithEngine:(id)arg1 ignoreAutoresizingMaskConstraints:(BOOL)arg2 returningConstraintsForViewsNeedingSecondPass:(id*)arg3;
- (void)_removeAlignmentDebuggingOverlays;
- (void)_removeConstraint:(id)arg1;
- (void)_setAutoresizingConstraints:(id)arg1;
- (void)_setContentCompressionResistancePriorities:(struct CGSize { float x1; float x2; })arg1;
- (void)_setContentHuggingPriorities:(struct CGSize { float x1; float x2; })arg1;
- (void)_setContentSizeConstraints:(id)arg1;
- (void)_setLayoutEngineHostConstraints:(id)arg1;
- (void)_setPrimitiveContentCompressionResistancePrioritiesValue:(id)arg1;
- (void)_setPrimitiveContentHuggingPrioritiesValue:(id)arg1;
- (struct CGSize { float x1; float x2; })_systemLayoutSizeFittingSize:(struct CGSize { float x1; float x2; })arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3;
- (BOOL)_tryToAddConstraint:(id)arg1 roundingAdjustment:(float)arg2 mutuallyExclusiveConstraints:(id*)arg3;
- (BOOL)_tryToAddConstraintWithoutUpdatingConstraintsArray:(id)arg1 roundingAdjustment:(float)arg2 mutuallyExclusiveConstraints:(id*)arg3;
- (void)_uiib_invalidateAutoresizingConstraints;
- (BOOL)_uiib_tryToAddConstraint:(id)arg1 roundingAdjustment:(float)arg2 mutuallyExclusiveConstraints:(id*)arg3;
- (void)_updateAutoresizingConstraints;
- (void)_updateContentSizeConstraints;
- (void)_updateLayoutEngineHostConstraints;
- (void)_viewHierarchyUnpreparedForConstraint:(id)arg1;
- (void)_withAutomaticEngineOptimizationDisabled:(id /* block */)arg1;
- (void)addConstraint:(id)arg1;
- (void)addConstraints:(id)arg1;
- (id)constraints;
- (id)constraintsAffectingLayoutForAxis:(int)arg1;
- (float)contentCompressionResistancePriorityForAxis:(int)arg1;
- (float)contentHuggingPriorityForAxis:(int)arg1;
- (void)exerciseAmbiguityInLayout;
- (BOOL)hasAmbiguousLayout;
- (struct CGSize { float x1; float x2; })intrinsicContentSize;
- (void)invalidateIntrinsicContentSize;
- (void)nsli_addConstraint:(id)arg1;
- (id)nsli_installedConstraints;
- (float)nsli_marginOffsetForAttribute:(int)arg1;
- (BOOL)nsli_removeConstraint:(id)arg1;
- (void)removeConstraint:(id)arg1;
- (void)removeConstraints:(id)arg1;
- (void)setContentCompressionResistancePriority:(float)arg1 forAxis:(int)arg2;
- (void)setContentHuggingPriority:(float)arg1 forAxis:(int)arg2;
- (struct CGSize { float x1; float x2; })systemLayoutSizeFittingSize:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })systemLayoutSizeFittingSize:(struct CGSize { float x1; float x2; })arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3;

// UIView (UIConstraintBasedLayout_EngineDelegate)

- (id)_dummyFittingSizeInfo;
- (void)_invalidateSystemLayoutSizeFittingSizeAtEngineDelegateLevel;
- (void)constraintsDidChangeInEngine:(id)arg1;
- (id)engine:(id)arg1 markerForConstraintToBreakAmongConstraints:(id)arg2;
- (void)engine:(id)arg1 willBreakConstraint:(id)arg2 dueToMutuallyExclusiveConstraints:(id)arg3;

// UIView (UIDebugging)

- (id)_autoresizingDescription;
- (id)_superDescription;
- (id)description;
- (id)recursiveDescription;

// UIView (UIFocusEngineAdditions)

- (BOOL)_isFocusDirectionFlippedHorizontally;
- (struct CGPoint { float x1; float x2; })focusDirection;
- (void)setFocusDirection:(struct CGPoint { float x1; float x2; })arg1;

// UIView (UIFocusEngineAdditions_Internal)

- (BOOL)_mayRemainFocused;
- (struct CGSize { float x1; float x2; })_sensitivitySize;
- (void)_setMayRemainFocused:(BOOL)arg1;

// UIView (UIGestureSorting)

- (int)_depthFirstCompare:(id)arg1;

// UIView (UIKBCandidates_Internal)

- (unsigned int)_numberOfColumns:(BOOL)arg1;

// UIView (UIKB_UIViewExtras)

- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_accessoryViewFrame;
- (int)_clipCorners;
- (int)_clipCornersOfView:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_compatibleBounds;
- (void)_convertToAutolayoutSizingIfNecessary;
- (void)_didChangeKeyplaneWithContext:(id)arg1;
- (BOOL)_hasAutolayoutHeightConstraint;
- (id)_inheritedRenderConfig;
- (BOOL)_lightStyleRenderConfig;
- (void)_removeAutolayoutSizingConstraints;
- (id)_rootInputWindowController;
- (void)_setAccessoryViewFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_setRenderConfig:(id)arg1;

// UIView (UIKitAccessibilityInterfaceBuilderSupport)

- (BOOL)isAccessibilityElementByDefault;
- (BOOL)isElementAccessibilityExposedToInterfaceBuilder;

// UIView (UIKitManual)

- (BOOL)_isDeallocating;
- (id)_layer;
- (id)_screen;
- (BOOL)_tryRetain;
- (id)autorelease;
- (id)layer;
- (oneway void)release;
- (id)retain;
- (unsigned int)retainCount;
- (id)superview;

// UIView (UINavigationBarAdditions)

- (void)_prepareToAppearInNavigationItem:(id)arg1 onLeft:(BOOL)arg2;

// UIView (UIPrintFormatter)

- (Class)_printFormatterClass;
- (void)drawRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forViewPrintFormatter:(id)arg2;
- (id)viewPrintFormatter;

// UIView (UIReferenceLibraryViewController_UIViewExtensions)

+ (id)_viewWithLayoutConstraints;

- (void)_constrainViewToSuperview;

// UIView (UITextEffectsOrdering)

- (int)compareTextEffectsOrdering:(id)arg1;
- (int)textEffectsVisibilityLevel;
- (int)textEffectsVisibilityLevelInKeyboardWindow;

// UIView (UITextEffectsWindowAdditions)

- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_convertViewPointToSceneSpaceForKeyboard:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;

// UIView (UITextField)

- (BOOL)endEditing:(BOOL)arg1;

// UIView (UITextInputView)

- (id)textInputView;

// UIView (UITouchInternalCompatibility)

- (id)_syntheticTouch;
- (id)_syntheticUIEventWithGSEvent:(struct __GSEvent { }*)arg1 touchPhase:(int)arg2;

// UIView (UIViewAnimationWithBlocks)

+ (void)_animateWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned int)arg3 animations:(id /* block */)arg4 start:(id /* block */)arg5 completion:(id /* block */)arg6;
+ (void)_animateWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned int)arg3 factory:(id)arg4 animations:(id /* block */)arg5 completion:(id /* block */)arg6;
+ (void)_setupAnimationWithDuration:(double)arg1 delay:(double)arg2 view:(id)arg3 options:(unsigned int)arg4 animations:(id /* block */)arg5 start:(id /* block */)arg6 completion:(id /* block */)arg7;
+ (void)_setupAnimationWithDuration:(double)arg1 delay:(double)arg2 view:(id)arg3 options:(unsigned int)arg4 factory:(id)arg5 animations:(id /* block */)arg6 start:(id /* block */)arg7 animationStateGenerator:(id /* block */)arg8 completion:(id /* block */)arg9;
+ (void)animateWithDuration:(double)arg1 animations:(id /* block */)arg2;
+ (void)animateWithDuration:(double)arg1 animations:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)animateWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned int)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;
+ (void)animateWithDuration:(double)arg1 delay:(double)arg2 usingSpringWithDamping:(float)arg3 initialSpringVelocity:(float)arg4 options:(unsigned int)arg5 animations:(id /* block */)arg6 completion:(id /* block */)arg7;
+ (void)performSystemAnimation:(unsigned int)arg1 onViews:(id)arg2 options:(unsigned int)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;
+ (void)transitionFromView:(id)arg1 toView:(id)arg2 duration:(double)arg3 options:(unsigned int)arg4 completion:(id /* block */)arg5;
+ (void)transitionWithView:(id)arg1 duration:(double)arg2 options:(unsigned int)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;

// UIView (UIViewGestures)

- (void)addGestureRecognizer:(id)arg1;
- (BOOL)deliversTouchesForGesturesToSuperview;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (id)gestureRecognizers;
- (BOOL)gesturesEnabled;
- (void)removeAllGestureRecognizers;
- (void)removeGestureRecognizer:(id)arg1;
- (void)setDeliversTouchesForGesturesToSuperview:(BOOL)arg1;
- (void)setGestureRecognizers:(id)arg1;
- (void)setGesturesEnabled:(BOOL)arg1;

// UIView (UIViewKeyframeAnimations)

+ (void)addKeyframeWithRelativeStartTime:(double)arg1 relativeDuration:(double)arg2 animations:(id /* block */)arg3;
+ (void)animateKeyframesWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned int)arg3 animations:(id /* block */)arg4 completion:(id /* block */)arg5;

// UIView (UIViewLayoutConstraintCreation)

- (id)_createIfNeededAnchorForAssocObjectKey:(char *)arg1 class:(Class)arg2 withAttribute:(int)arg3;
- (id)bottomAnchor;
- (id)centerXAnchor;
- (id)centerYAnchor;
- (id)firstBaselineAnchor;
- (id)heightAnchor;
- (id)lastBaselineAnchor;
- (id)leadingAnchor;
- (id)leftAnchor;
- (id)rightAnchor;
- (id)topAnchor;
- (id)trailingAnchor;
- (id)widthAnchor;

// UIView (UIViewRTL)

+ (BOOL)_enableRTL;

- (BOOL)_shouldReverseLayoutDirection;

// UIView (UIViewStyleAdditions)

+ (id)_tintColorForStyle:(int)arg1;

- (int)_containerStyle;
- (int)_style;

// UIView (XcodeDebuggerSupport)

+ (void)_enableToolsDebugAlignmentRects:(BOOL)arg1;
+ (void)_enableToolsDebugColorViewBounds:(BOOL)arg1;
+ (BOOL)_toolsDebugAlignmentRects;
+ (BOOL)_toolsDebugColorViewBounds;

- (id)_colorViewBoundsOverlayCreateIfNecessary:(BOOL)arg1;
- (id)_hierarchyRepresentation;
- (void)_removeColorViewBoundsOverlays;
- (id)_representationOfHierarchyForXcode;

// UIView (XcodeFocusDebuggerSupport)

+ (void)_enableToolsDebugFocusItems:(BOOL)arg1;
+ (BOOL)_toolsDebugFocusItems;

- (id)_focusItemsOverlayCreateIfNecessary:(BOOL)arg1;
- (void)_removeFocusItemOverlayViews;
- (void)_updateFocusItemOverlayViews;

// UIView (_UIAccessibilityButtonShapesSupport)

- (BOOL)_areAccessibilityButtonShapesEnabled;

// UIView (_UIKitLayoutSpacing)

- (float)_autolayoutSpacingAtEdge:(int)arg1 inContainer:(id)arg2;
- (float)_autolayoutSpacingAtEdge:(int)arg1 nextToNeighbor:(id)arg2;
- (BOOL)_hasCustomAutolayoutNeighborSpacing;

// UIView (_UILayoutArrangementInternalAdditions)

- (BOOL)_la_isVisible;

// UIView (_UIOldConstraintBasedLayoutSupport)

- (void)_addCenterExpressionToExpression:(id)arg1 isVertical:(BOOL)arg2;
- (id)_centerExpressionInContainer:(id)arg1 vertical:(BOOL)arg2 contentInsetScale:(float)arg3;
- (void)_didAddDependentConstraint:(id)arg1;
- (void)_didRemoveDependentConstraint:(id)arg1;
- (id)_dimensionExpressionInContainer:(id)arg1 vertical:(BOOL)arg2 useContentVariables:(BOOL)arg3;
- (id)_edgeExpressionInContainer:(id)arg1 vertical:(BOOL)arg2 max:(BOOL)arg3 contentInsetScale:(float)arg4;
- (id)_lowerExpressionOneLevelWithCurrentXExpression:(id)arg1 YExpression:(id)arg2 vertical:(BOOL)arg3 container:(id)arg4;
- (void)_nsis_origin:(struct CGPoint { float x1; float x2; }*)arg1 bounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg2 inEngine:(id)arg3;
- (void)_oldUpdateLayoutEngineHostConstraints;
- (BOOL)_old_nsli_lowerAttribute:(int)arg1 intoExpression:(id)arg2 withCoefficient:(float)arg3 forConstraint:(id)arg4;
- (id)_scrollViewWantingUpdateInConstraint:(id)arg1;
- (id)_viewForBaselineLayout;
- (id)viewForBaselineLayout;

// UIView (_UIPickerReuse)

- (BOOL)_canBeReusedInPickerView;

@end
