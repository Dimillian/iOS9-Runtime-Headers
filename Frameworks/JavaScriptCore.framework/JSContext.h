/* Generated by RuntimeBrowser
   Image: /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore
 */

@interface JSContext : NSObject {
    id /* block */  exceptionHandler;
    struct OpaqueJSContext { } * m_context;
    struct Strong<JSC::JSObject> { 
        struct JSValue {} *m_slot; 
    }  m_exception;
    JSVirtualMachine * m_virtualMachine;
    JSWrapperMap * m_wrapperMap;
}

@property (retain) JSValue *exception;
@property (copy) id /* block */ exceptionHandler;
@property (readonly) JSValue *globalObject;
@property (copy) NSString *name;
@property (readonly) JSVirtualMachine *virtualMachine;
@property (readonly, retain) JSWrapperMap *wrapperMap;

+ (id)currentArguments;
+ (id)currentCallee;
+ (id)currentContext;
+ (id)currentThis;

- (id).cxx_construct;
- (void).cxx_destruct;
- (struct OpaqueJSContext { }*)JSGlobalContextRef;
- (struct __CFRunLoop { }*)_debuggerRunLoop;
- (BOOL)_includesNativeCallStackWhenReportingExceptions;
- (BOOL)_remoteInspectionEnabled;
- (void)_setDebuggerRunLoop:(struct __CFRunLoop { }*)arg1;
- (void)_setIncludesNativeCallStackWhenReportingExceptions:(BOOL)arg1;
- (void)_setRemoteInspectionEnabled:(BOOL)arg1;
- (void)dealloc;
- (id)evaluateScript:(id)arg1;
- (id)evaluateScript:(id)arg1 withSourceURL:(id)arg2;
- (id)exception;
- (id /* block */)exceptionHandler;
- (id)globalObject;
- (id)init;
- (id)initWithVirtualMachine:(id)arg1;
- (id)name;
- (void)setException:(id)arg1;
- (void)setExceptionHandler:(id /* block */)arg1;
- (void)setName:(id)arg1;
- (id)virtualMachine;
- (id)wrapperMap;

// JSContext (Internal)

+ (id)contextWithJSGlobalContextRef:(struct OpaqueJSContext { }*)arg1;

- (void)beginCallbackWithData:(struct CallbackData { struct CallbackData {} *x1; id x2; struct OpaqueJSValue {} *x3; struct OpaqueJSValue {} *x4; unsigned int x5; struct OpaqueJSValue {} **x6; id x7; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x8; void*x9; void*x10; void*x11; void*x12; out void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; unsigned char x19; unsigned int x20; void*x21; void*x22; out void*x23; out void*x24; float x25; float x26; void*x27; BOOL x28; void*x29; void*x30; const void*x31; in short x32; float x33; void*x34; const void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; id x51; void*x52; }*)arg1 calleeValue:(struct OpaqueJSValue { }*)arg2 thisValue:(struct OpaqueJSValue { }*)arg3 argumentCount:(unsigned long)arg4 arguments:(const struct OpaqueJSValue {}**)arg5;
- (BOOL)boolFromNotifyException:(struct OpaqueJSValue { }*)arg1;
- (void)endCallbackWithData:(struct CallbackData { struct CallbackData {} *x1; id x2; struct OpaqueJSValue {} *x3; struct OpaqueJSValue {} *x4; unsigned int x5; struct OpaqueJSValue {} **x6; id x7; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x8; void*x9; void*x10; void*x11; void*x12; out void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; out void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; out void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; long x84; int x85; BOOL x86; void*x87; void*x88; int x89; out in short x90; void*x91; void*x92; BOOL x93; out double x94; void*x95; void*x96; unsigned int x97/* : ? */; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; unsigned char x106; out in void*x107; void*x108; in void*x109; short x110; void*x111; long doublex112; void*x113; void x114; void*x115; long x116; out void*x117; void*x118; const void*x119; void*x120; long x121; void*x122; void*x123; float x124; out const void*x125; short x126; void*x127; int x128; void*x129; void*x130; out in void*x131; unsigned short x132; int x133; void*x134; void*x135; long x136; void*x137; void*x138; out const void*x139; void*x140; long x141; void*x142; void*x143; float x144; out const void*x145; void*x146; long doublex147; void*x148; void x149; void*x150; long x151; out void*x152; void*x153; const void*x154; unsigned short x155; long doublex156; void*x157; short x158; void*x159; int x160; void*x161; void*x162; out in void*x163; unsigned short x164; int x165; void*x166; void*x167; long x168; void*x169; void*x170; out const void*x171; short x172; double x173; void*x174; void*x175; unsigned short x176; void*x177; short x178; void*x179; void*x180; void*x181; void*x182; unsigned long x183; int x184; unsigned int x185/* : ? */; const void*x186; const void*x187; void*x188; void*x189; const void*x190; void*x191; void*x192; void*x193; out const void*x194; short x195; void*x196; void*x197; unsigned int x198; void*x199; int x200; void*x201; void*x202; float x203; const void*x204; void*x205; void*x206; void*x207; out const void*x208; void*x209; void*x210; unsigned int x211; void*x212; int x213; void*x214; void*x215; void*x216; void*x217; void*x218; out void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; unsigned int x227; bool x228; void*x229; void*x230; void*x231; out in bool x232; void*x233; const void*x234; void*x235; const void*x236; void*x237; void*x238; BOOL x239; void*x240; int x241; out in void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; }*)arg1;
- (id)initWithGlobalContextRef:(struct OpaqueJSContext { }*)arg1;
- (void)notifyException:(struct OpaqueJSValue { }*)arg1;
- (id)valueFromNotifyException:(struct OpaqueJSValue { }*)arg1;
- (id)wrapperForJSObject:(struct OpaqueJSValue { }*)arg1;
- (id)wrapperForObjCObject:(id)arg1;

// JSContext (SubscriptSupport)

- (id)objectForKeyedSubscript:(id)arg1;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;

@end
